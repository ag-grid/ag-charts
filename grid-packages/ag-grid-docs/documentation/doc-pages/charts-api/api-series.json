{
  "_config_": {},
  "bar": {
    "meta": {
      "displayName": "Series: Bar/Column",
      "description": "Configuration for bar/column series."
    },
    "xKey": {
      "type": "string",
      "isRequired": true,
      "description": "The key to use to retrieve x-values from the data."
    },
    "xName": {
      "type": "string",
      "description": "A human-readable description of the x-values. If supplied, this will be shown in the default tooltip and passed to the tooltip renderer as one of the parameters."
    },
    "yKeys": {
      "type": "string[]",
      "isRequired": true,
      "description": "The keys to use to retrieve y-values from the data."
    },
    "yNames": {
      "type": "string[]",
      "description": "Human-readable descriptions of the y-values. If supplied, a corresponding `yName` will be shown in the default tooltip and passed to the tooltip renderer as one of the parameters."
    },
    "data": {
      "type": "object[]",
      "isRequired": true,
      "description": "The data to use when rendering the series. If this is not supplied, data must be set on the chart instead."
    },
    "visible": {
      "default": true,
      "description": "Whether or not to display the series."
    },
    "showInLegend": {
      "default": true,
      "description": "Whether or not to include the series in the legend."
    },
    "cursor": {
      "type": "string",
      "default": "default",
      "description": "The cursor to use for hovered bars/columns. This config is identical to the CSS `cursor` property."
    },
    "tooltip": {
      "meta": {
        "description": "Series-specific tooltip configuration."
      },
      "enabled": {
        "default": true,
        "description": "Whether or not to show tooltips when the series are hovered over."
      },
      "renderer": {
        "type": {
          "parameters": {
            "datum": "any",
            "title?": "string",
            "color?": "string",
            "xKey": "string",
            "xValue": "any",
            "xName?": "string",
            "yKey": "string",
            "yValue": "any",
            "yName?": "string"
          },
          "returnType": "string"
        },
        "description": "Function used to create the content for tooltips."
      }
    },
    "grouped": {
      "default": false,
      "description": "Whether to show different y-values as separate bars (grouped) or not (stacked)."
    },
    "normalizedTo": {
      "type": "number",
      "description": "The number to normalise the bar stacks to. Has no effect when <code>grouped</code> is <code>true</code>. For example, if <code>normalizedTo</code> is set to <code>100</code>, the bar stacks will all be scaled proportionally so that each of their totals is 100.",
      "min": 1,
      "max": 100
    },
    "fills": {
      "type": "string[]",
      "default": [
        "#f3622d",
        "#fba71b",
        "#57b757",
        "#41a9c9",
        "#4258c9",
        "#9a42c8",
        "#c84164",
        "#888888"
      ],
      "description": "The colours to cycle through for the fills of the bars."
    },
    "fillOpacity": {
      "default": 1,
      "description": "The opacity of the fill for the bars.",
      "min": 0,
      "max": 1,
      "step": 0.05
    },
    "strokes": {
      "type": "string[]",
      "default": [
        "#aa4520",
        "#b07513",
        "#3d803d",
        "#2d768d",
        "#2e3e8d",
        "#6c2e8c",
        "#8c2d46",
        "#5f5f5f"
      ],
      "description": "The colours to cycle through for the strokes of the bars."
    },
    "strokeOpacity": {
      "default": 1,
      "description": "The opacity of the stroke for the bars.",
      "min": 0,
      "max": 1,
      "step": 0.05
    },
    "strokeWidth": {
      "default": 1,
      "description": "The width in pixels of the stroke for the bars.",
      "min": 0,
      "max": 20,
      "unit": "px"
    },
    "highlightStyle": {
      "meta": {
        "requiresWholeObject": true,
        "description": "Configuration for series item and whole series highlighting when bar/column segments or legend items are hovered over."
      },
      "item": {
        "meta": {
          "requiresWholeObject": true,
          "description": "Highlight style used for an individual bar / bar segment when tapped or hovered over."
        },
        "fill": {
          "default": "yellow",
          "description": "The fill colour of a bar / bar segment when hovered over. Use `undefined` for no highlight."
        },
        "stroke": {
          "type": "string",
          "description": "The stroke colour of a bar / bar segment when hovered over. Use `undefined` for no highlight."
        },
        "strokeWidth": {
          "type": "number",
          "description": "The stroke width of a bar / bar segment when hovered over. Use `undefined` for no highlight."
        }
      },
      "series": {
        "meta": {
          "requiresWholeObject": true,
          "description": "Highlight style used for all bars (or bar segments belonging to the same stack level, in case of stacked bars) when individual bar / bar segment is tapped or hovered over."
        },
        "strokeWidth": {
          "type": "number",
          "description": "The stroke width of the bars (or bar segments belonging to the same stack level, in case of stacked bars) when individual bar / bar segment is tapped or hovered over, or when a legend item is hovered over. Use `undefined` for no highlight."
        },
        "dimOpacity": {
          "type": "number",
          "description": "The opacity of the bars (or bar segments belonging to the same stack level, in case of stacked bars) when another chart series or other stack level in the same bar series is highlighted by hovering a series item or a legend item. Use `undefined` or `1` for no dimming."
        }
      }
    },
    "shadow": {
      "meta": {
        "description": "Configuration for the shadow used behind the chart series."
      },
      "enabled": {
        "default": true,
        "description": "Whether or not the shadow is visible."
      },
      "color": {
        "default": "rgba(0, 0, 0, 0.5)",
        "description": "The colour of the shadow."
      },
      "xOffset": {
        "default": 0,
        "description": "The horizontal offset in pixels for the shadow.",
        "min": -20,
        "max": 20,
        "unit": "px"
      },
      "yOffset": {
        "default": 0,
        "description": "The vertical offset in pixels for the shadow.",
        "min": -20,
        "max": 20,
        "unit": "px"
      },
      "blur": {
        "default": 5,
        "description": "The radius of the shadow's blur, given in pixels.",
        "min": 0,
        "max": 20,
        "unit": "px"
      }
    },
    "lineDash": {
      "default": [],
      "type": "number[]",
      "description": "Defines how the bar/column strokes are rendered. Every number in the array specifies the length in pixels of alternating dashes and gaps. For example, <code>[6, 3]</code> means dashes with a length of <code>6</code> pixels with gaps between of <code>3</code> pixels."
    },
    "lineDashOffset": {
      "default": 0,
      "type": "number",
      "description": "The initial offset of the dashed line in pixels.",
      "min": 0,
      "max": 200,
      "unit": "px"
    },
    "label": {
      "meta": {
        "description": "Configuration for the labels shown on bars."
      },
      "enabled": {
        "default": true,
        "description": "Whether or not the labels should be shown."
      },
      "placement": {
        "default": "inside",
        "description": "Where to render series labels relative to the segments.",
        "options": [
          "inside",
          "outside"
        ]
      },
      "color": {
        "default": "rgba(70, 70, 70, 1)",
        "description": "The colour to use for the labels."
      },
      "fontStyle": {
        "default": "normal",
        "options": [
          "normal",
          "italic",
          "oblique"
        ],
        "description": "The font style to use for the labels."
      },
      "fontWeight": {
        "default": "normal",
        "options": [
          "normal",
          "bold",
          "bolder",
          "lighter",
          "100",
          "200",
          "300",
          "400",
          "500",
          "600",
          "700",
          "800",
          "900"
        ],
        "description": "The font weight to use for the labels.",
        "breakIndex": 4
      },
      "fontSize": {
        "default": 12,
        "description": "The font size in pixels to use for the labels.",
        "min": 1,
        "max": 30,
        "unit": "px"
      },
      "fontFamily": {
        "default": "Verdana, sans-serif",
        "suggestions": [
          "Verdana, sans-serif",
          "Arial, sans-serif",
          "Times New Roman, serif"
        ],
        "description": "The font family to use for the labels."
      },
      "formatter": {
        "type": {
          "parameters": {
            "value": "number"
          },
          "returnType": "string"
        },
        "description": "Function used to turn 'yKey' values into text to be displayed by a label. Be default the values are simply stringified."
      }
    },
    "formatter": {
      "type": {
        "parameters": {
          "datum": "any",
          "fill": "string",
          "stroke": "string",
          "strokeWidth": "number",
          "highlighted": "boolean",
          "xKey": "string",
          "yKey": "string"
        },
        "returnType": {
          "fill": "string",
          "stroke": "string",
          "strokeWidth": "number"
        }
      },
      "description": "Function used to return formatting for individual bars/columns, based on the given parameters. If the current bar/column is highlighted, the <code>highlighted</code> property will be set to <code>true</code>; make sure to check this if you want to differentiate between the highlighted and un-highlighted states."
    },
    "listeners": {
      "meta": {
        "description": "A map of event names to event listeners."
      },
      "nodeClick": {
        "type": {
          "parameters": {
            "type": "'nodeClick'",
            "series": "BarSeries",
            "datum": "any",
            "xKey": "string",
            "yKey": "string"
          },
          "returnType": "any"
        },
        "description": "The listener to call when a bar/column node is clicked."
      }
    }
  },
  "line": {
    "meta": {
      "displayName": "Series: Line",
      "description": "Configuration for line series."
    },
    "xKey": {
      "type": "string",
      "isRequired": true,
      "description": "The key to use to retrieve x-values from the data."
    },
    "xName": {
      "type": "string",
      "description": "A human-readable description of the x-values. If supplied, this will be shown in the default tooltip and passed to the tooltip renderer as one of the parameters."
    },
    "yKey": {
      "type": "string",
      "isRequired": true,
      "description": "The key to use to retrieve y-values from the data."
    },
    "yName": {
      "type": "string",
      "description": "A human-readable description of the y-values. If supplied, this will be shown in the default tooltip and passed to the tooltip renderer as one of the parameters."
    },
    "data": {
      "type": "object[]",
      "isRequired": true,
      "description": "The data to use when rendering the series. If this is not supplied, data must be set on the chart instead."
    },
    "visible": {
      "default": true,
      "description": "Whether or not to display the series."
    },
    "showInLegend": {
      "default": true,
      "description": "Whether or not to include the series in the legend."
    },
    "cursor": {
      "type": "string",
      "default": "default",
      "description": "The cursor to use for hovered line markers. This config is identical to the CSS `cursor` property."
    },
    "tooltip": {
      "meta": {
        "description": "Series-specific tooltip configuration."
      },
      "enabled": {
        "default": true,
        "description": "Whether or not to show tooltips when the series are hovered over."
      },
      "renderer": {
        "type": {
          "parameters": {
            "datum": "any",
            "title?": "string",
            "color?": "string",
            "xKey": "string",
            "xValue": "any",
            "xName?": "string",
            "yKey": "string",
            "yValue": "any",
            "yName?": "string"
          },
          "returnType": "string"
        },
        "description": "Function used to create the content for tooltips."
      }
    },
    "title": {
      "type": "string",
      "description": "The title to use for the series. Defaults to <code>yName</code> if it exists, or <code>yKey</code> if not."
    },
    "stroke": {
      "default": "#aa4520",
      "description": "The colour of the stroke for the lines."
    },
    "strokeOpacity": {
      "default": 1,
      "description": "The opacity of the stroke for the lines.",
      "min": 0,
      "max": 1,
      "step": 0.05
    },
    "strokeWidth": {
      "default": 1,
      "description": "The width in pixels of the stroke for the lines.",
      "min": 0,
      "max": 20,
      "unit": "px"
    },
    "marker": {
      "meta": {
        "description": "Configuration for the markers used in the series."
      },
      "enabled": {
        "default": true,
        "description": "Whether or not to show markers."
      },
      "shape": {
        "type": "string | Marker",
        "default": "circle",
        "description": "The shape to use for the markers. You can also supply a custom marker by providing a <code>Marker</code> subclass.",
        "options": [
          "circle",
          "cross",
          "diamond",
          "plus",
          "square",
          "triangle"
        ]
      },
      "size": {
        "default": 8,
        "description": "The size in pixels of the markers.",
        "min": 1,
        "max": 20,
        "unit": "px"
      },
      "maxSize": {
        "default": 30,
        "description": "For series where the size of the marker is determined by the data, this determines the largest size a marker can be in pixels.",
        "min": 1,
        "max": 20,
        "unit": "px"
      },
      "fill": {
        "type": "string",
        "description": "The colour to use for marker fills. If this is not specified, the markers will take their fill from the series."
      },
      "stroke": {
        "type": "string",
        "description": "The colour to use for marker strokes. If this is not specified, the markers will take their stroke from the series."
      },
      "strokeWidth": {
        "type": "number",
        "description": "The width in pixels of the marker stroke. If this is not specified, the markers will take their stroke width from the series.",
        "min": 0,
        "max": 10,
        "unit": "px"
      },
      "formatter": {
        "type": {
          "parameters": {
            "datum": "any",
            "fill": "string",
            "stroke": "string",
            "strokeWidth": "number",
            "size": "number",
            "highlighted": "boolean",
            "xKey": "string",
            "yKey": "string"
          },
          "returnType": {
            "fill": "string",
            "stroke": "string",
            "strokeWidth": "number",
            "size": "number"
          }
        },
        "description": "Function used to return formatting for individual markers, based on the supplied information. If the current marker is highlighted, the <code>highlighted</code> property will be set to <code>true</code>; make sure to check this if you want to differentiate between the highlighted and un-highlighted states."
      }
    },
    "label": {
      "meta": {
        "description": "Configuration for the labels shown on top of data points."
      },
      "enabled": {
        "default": true,
        "description": "Whether or not the labels should be shown."
      },
      "color": {
        "default": "rgba(70, 70, 70, 1)",
        "description": "The colour to use for the labels."
      },
      "fontStyle": {
        "default": "normal",
        "options": [
          "normal",
          "italic",
          "oblique"
        ],
        "description": "The font style to use for the labels."
      },
      "fontWeight": {
        "default": "normal",
        "options": [
          "normal",
          "bold",
          "bolder",
          "lighter",
          "100",
          "200",
          "300",
          "400",
          "500",
          "600",
          "700",
          "800",
          "900"
        ],
        "description": "The font weight to use for the labels.",
        "breakIndex": 4
      },
      "fontSize": {
        "default": 12,
        "description": "The font size in pixels to use for the labels.",
        "min": 1,
        "max": 30,
        "unit": "px"
      },
      "fontFamily": {
        "default": "Verdana, sans-serif",
        "suggestions": [
          "Verdana, sans-serif",
          "Arial, sans-serif",
          "Times New Roman, serif"
        ],
        "description": "The font family to use for the labels."
      },
      "formatter": {
        "type": {
          "parameters": {
            "value": "any"
          },
          "returnType": "string"
        },
        "description": "Function used to turn 'yKey' values into text to be displayed by a label. Be default the values are simply stringified."
      }
    },
    "highlightStyle": {
      "meta": {
        "requiresWholeObject": true,
        "description": "Configuration for line series markers and series line highlighting when a line marker / data point or a legend item is hovered over."
      },
      "item": {
        "meta": {
          "requiresWholeObject": true,
          "description": "Highlight style used for an individual markers when tapped or hovered over."
        },
        "fill": {
          "default": "yellow",
          "description": "The fill colour of a marker when tapped or hovered over. Use `undefined` for no highlight."
        },
        "stroke": {
          "type": "string",
          "description": "The stroke colour of a marker when tapped or hovered over. Use `undefined` for no highlight."
        },
        "strokeWidth": {
          "type": "number",
          "description": "The stroke width of a marker when tapped or hovered over. Use `undefined` for no highlight."
        }
      },
      "series": {
        "meta": {
          "requiresWholeObject": true,
          "description": "Highlight style used for whole series when one of its markers is tapped or hovered over."
        },
        "strokeWidth": {
          "type": "number",
          "description": "The stroke width of the trend line when one of the markers is tapped or hovered over, or when a tooltip is shown for a data point, even when series markers are disabled. Use `undefined` for no highlight."
        },
        "dimOpacity": {
          "type": "number",
          "description": "The opacity of the whole series (trend line, labels and markers, if any) when another chart series is highlighted by hovering a data point or a legend item. Use `undefined` or `1` for no dimming."
        }
      }
    },
    "lineDash": {
      "default": [],
      "type": "number[]",
      "description": "Defines how the line stroke is rendered. Every number in the array specifies the length in pixels of alternating dashes and gaps. For example, <code>[6, 3]</code> means dashes with a length of <code>6</code> pixels with gaps between of <code>3</code> pixels."
    },
    "lineDashOffset": {
      "default": 0,
      "type": "number",
      "description": "The initial offset of the dashed line in pixels.",
      "min": 0,
      "max": 200,
      "unit": "px"
    },
    "listeners": {
      "meta": {
        "description": "A map of event names to event listeners."
      },
      "nodeClick": {
        "type": {
          "parameters": {
            "type": "'nodeClick'",
            "series": "LineSeries",
            "datum": "any",
            "xKey": "string",
            "yKey": "string"
          },
          "returnType": "any"
        },
        "description": "The listener to call when a line series node (marker) is clicked."
      }
    }
  },
  "area": {
    "meta": {
      "displayName": "Series: Area",
      "description": "Configuration for area series."
    },
    "xKey": {
      "type": "string",
      "isRequired": true,
      "description": "The key to use to retrieve x-values from the data."
    },
    "xName": {
      "type": "string",
      "description": "A human-readable description of the x-values. If supplied, this will be shown in the default tooltip and passed to the tooltip renderer as one of the parameters."
    },
    "yKeys": {
      "type": "string[]",
      "isRequired": true,
      "description": "The keys to use to retrieve y-values from the data."
    },
    "yNames": {
      "type": "string[]",
      "description": "Human-readable descriptions of the y-values. If supplied, a corresponding `yName` will be shown in the default tooltip and passed to the tooltip renderer as one of the parameters."
    },
    "data": {
      "type": "object[]",
      "isRequired": true,
      "description": "The data to use when rendering the series. If this is not supplied, data must be set on the chart instead."
    },
    "visible": {
      "default": true,
      "description": "Whether or not to display the series."
    },
    "showInLegend": {
      "default": true,
      "description": "Whether or not to include the series in the legend."
    },
    "cursor": {
      "type": "string",
      "default": "default",
      "description": "The cursor to use for hovered area markers. This config is identical to the CSS `cursor` property."
    },
    "tooltip": {
      "meta": {
        "description": "Series-specific tooltip configuration."
      },
      "enabled": {
        "default": true,
        "description": "Whether or not to show tooltips when the series are hovered over."
      },
      "renderer": {
        "type": {
          "parameters": {
            "datum": "any",
            "title?": "string",
            "color?": "string",
            "xKey": "string",
            "xValue": "any",
            "xName?": "string",
            "yKey": "string",
            "yValue": "any",
            "yName?": "string"
          },
          "returnType": "string"
        },
        "description": "Function used to create the content for tooltips."
      }
    },
    "normalizedTo": {
      "type": "number",
      "description": "The number to normalise the area stacks to. For example, if <code>normalizedTo</code> is set to <code>100</code>, the stacks will all be scaled proportionally so that their total height is always 100.",
      "min": 1,
      "max": 100
    },
    "fills": {
      "type": "string[]",
      "default": [
        "#f3622d",
        "#fba71b",
        "#57b757",
        "#41a9c9",
        "#4258c9",
        "#9a42c8",
        "#c84164",
        "#888888"
      ],
      "description": "The colours to cycle through for the fills of the areas."
    },
    "fillOpacity": {
      "default": 1,
      "description": "The opacity of the fill for the areas.",
      "min": 0,
      "max": 1,
      "step": 0.05
    },
    "strokes": {
      "type": "string[]",
      "default": [
        "#aa4520",
        "#b07513",
        "#3d803d",
        "#2d768d",
        "#2e3e8d",
        "#6c2e8c",
        "#8c2d46",
        "#5f5f5f"
      ],
      "description": "The colours to cycle through for the strokes of the areas."
    },
    "strokeOpacity": {
      "default": 1,
      "description": "The opacity of the stroke for the areas.",
      "min": 0,
      "max": 1,
      "step": 0.05
    },
    "strokeWidth": {
      "default": 1,
      "description": "The width in pixels of the stroke for the areas.",
      "min": 0,
      "max": 20,
      "unit": "px"
    },
    "marker": {
      "meta": {
        "description": "Configuration for the markers used in the series."
      },
      "enabled": {
        "default": false,
        "description": "Whether or not to show markers."
      },
      "shape": {
        "type": "string | Marker",
        "default": "circle",
        "description": "The shape to use for the markers. You can also supply a custom marker by providing a <code>Marker</code> subclass.",
        "options": [
          "circle",
          "cross",
          "diamond",
          "plus",
          "square",
          "triangle"
        ]
      },
      "size": {
        "default": 8,
        "description": "The size in pixels of the markers.",
        "min": 1,
        "max": 20,
        "unit": "px"
      },
      "maxSize": {
        "default": 30,
        "description": "For series where the size of the marker is determined by the data, this determines the largest size a marker can be in pixels.",
        "min": 1,
        "max": 20,
        "unit": "px"
      },
      "fill": {
        "type": "string",
        "description": "The colour to use for marker fills. If this is not specified, the markers will take their fill from the series."
      },
      "stroke": {
        "type": "string",
        "description": "The colour to use for marker strokes. If this is not specified, the markers will take their stroke from the series."
      },
      "strokeWidth": {
        "type": "number",
        "description": "The width in pixels of the marker stroke. If this is not specified, the markers will take their stroke width from the series.",
        "min": 0,
        "max": 10,
        "unit": "px"
      },
      "formatter": {
        "type": {
          "parameters": {
            "datum": "any",
            "fill": "string",
            "stroke": "string",
            "strokeWidth": "number",
            "size": "number",
            "highlighted": "boolean",
            "xKey": "string",
            "yKey": "string"
          },
          "returnType": {
            "fill": "string",
            "stroke": "string",
            "strokeWidth": "number",
            "size": "number"
          }
        },
        "description": "Function used to return formatting for individual markers, based on the supplied information. If the current marker is highlighted, the <code>highlighted</code> property will be set to <code>true</code>; make sure to check this if you want to differentiate between the highlighted and un-highlighted states."
      }
    },
    "label": {
      "meta": {
        "description": "Configuration for the labels shown on top of data points."
      },
      "enabled": {
        "default": true,
        "description": "Whether or not the labels should be shown."
      },
      "color": {
        "default": "rgba(70, 70, 70, 1)",
        "description": "The colour to use for the labels."
      },
      "fontStyle": {
        "default": "normal",
        "options": [
          "normal",
          "italic",
          "oblique"
        ],
        "description": "The font style to use for the labels."
      },
      "fontWeight": {
        "default": "normal",
        "options": [
          "normal",
          "bold",
          "bolder",
          "lighter",
          "100",
          "200",
          "300",
          "400",
          "500",
          "600",
          "700",
          "800",
          "900"
        ],
        "description": "The font weight to use for the labels.",
        "breakIndex": 4
      },
      "fontSize": {
        "default": 12,
        "description": "The font size in pixels to use for the labels.",
        "min": 1,
        "max": 30,
        "unit": "px"
      },
      "fontFamily": {
        "default": "Verdana, sans-serif",
        "suggestions": [
          "Verdana, sans-serif",
          "Arial, sans-serif",
          "Times New Roman, serif"
        ],
        "description": "The font family to use for the labels."
      },
      "formatter": {
        "type": {
          "parameters": {
            "value": "any"
          },
          "returnType": "string"
        },
        "description": "Function used to turn 'yKey' values into text to be displayed by a label. Be default the values are simply stringified."
      }
    },
    "highlightStyle": {
      "meta": {
        "requiresWholeObject": true,
        "description": "Configuration for area series markers and series line highlighting when an area marker / data point or a legend item is hovered over."
      },
      "item": {
        "meta": {
          "requiresWholeObject": true,
          "description": "Highlight style used for an individual markers when tapped or hovered over."
        },
        "fill": {
          "default": "yellow",
          "description": "The fill colour of a marker when tapped or hovered over. Use `undefined` for no highlight."
        },
        "stroke": {
          "type": "string",
          "description": "The stroke colour of a marker when tapped or hovered over. Use `undefined` for no highlight."
        },
        "strokeWidth": {
          "type": "number",
          "description": "The stroke width of a marker when tapped or hovered over. Use `undefined` for no highlight."
        }
      },
      "series": {
        "meta": {
          "requiresWholeObject": true,
          "description": "Highlight style used for whole series when one of its markers is tapped or hovered over."
        },
        "strokeWidth": {
          "type": "number",
          "description": "The stroke width of the area line when one of the markers is tapped or hovered over, or when a tooltip is shown for a data point, even when series markers are disabled. Use `undefined` for no highlight."
        },
        "dimOpacity": {
          "type": "number",
          "description": "The opacity of the whole series (area line, area fill, labels and markers, if any) when another chart series or another stack level in the same area series is highlighted by hovering a data point or a legend item. Use `undefined` or `1` for no dimming."
        }
      }
    },
    "lineDash": {
      "default": [],
      "type": "number[]",
      "description": "Defines how the area strokes are rendered. Every number in the array specifies the length in pixels of alternating dashes and gaps. For example, <code>[6, 3]</code> means dashes with a length of <code>6</code> pixels with gaps between of <code>3</code> pixels."
    },
    "lineDashOffset": {
      "default": 0,
      "type": "number",
      "description": "The initial offset of the dashed line in pixels.",
      "min": 0,
      "max": 200,
      "unit": "px"
    },
    "shadow": {
      "meta": {
        "description": "Configuration for the shadow used behind the chart series."
      },
      "enabled": {
        "default": true,
        "description": "Whether or not the shadow is visible."
      },
      "color": {
        "default": "rgba(0, 0, 0, 0.5)",
        "description": "The colour of the shadow."
      },
      "xOffset": {
        "default": 0,
        "description": "The horizontal offset in pixels for the shadow.",
        "min": -20,
        "max": 20,
        "unit": "px"
      },
      "yOffset": {
        "default": 0,
        "description": "The vertical offset in pixels for the shadow.",
        "min": -20,
        "max": 20,
        "unit": "px"
      },
      "blur": {
        "default": 5,
        "description": "The radius of the shadow's blur, given in pixels.",
        "min": 0,
        "max": 20,
        "unit": "px"
      }
    }
  },
  "scatter": {
    "meta": {
      "displayName": "Series: Scatter/Bubble",
      "description": "Configuration for scatter/bubble series."
    },
    "xKey": {
      "type": "string",
      "isRequired": true,
      "description": "The key to use to retrieve x-values from the data."
    },
    "xName": {
      "type": "string",
      "description": "A human-readable description of the x-values. If supplied, this will be shown in the default tooltip and passed to the tooltip renderer as one of the parameters."
    },
    "yKey": {
      "type": "string",
      "isRequired": true,
      "description": "The key to use to retrieve y-values from the data."
    },
    "yName": {
      "type": "string",
      "description": "A human-readable description of the y-values. If supplied, this will be shown in the default tooltip and passed to the tooltip renderer as one of the parameters."
    },
    "sizeKey": {
      "type": "string",
      "description": "The key to use to retrieve size values from the data, used to control the size of the markers in bubble charts."
    },
    "sizeName": {
      "type": "string",
      "description": "A human-readable description of the size values. If supplied, this will be shown in the default tooltip and passed to the tooltip renderer as one of the parameters."
    },
    "labelKey": {
      "type": "string",
      "description": "The key to use to retrieve values from the data to use as labels for the markers."
    },
    "labelName": {
      "type": "string",
      "description": "A human-readable description of the label values. If supplied, this will be shown in the default tooltip and passed to the tooltip renderer as one of the parameters."
    },
    "data": {
      "type": "object[]",
      "isRequired": true,
      "description": "The data to use when rendering the series. If this is not supplied, data must be set on the chart instead."
    },
    "visible": {
      "default": true,
      "description": "Whether or not to display the series."
    },
    "showInLegend": {
      "default": true,
      "description": "Whether or not to include the series in the legend."
    },
    "cursor": {
      "type": "string",
      "default": "default",
      "description": "The cursor to use for hovered scatter markers. This config is identical to the CSS `cursor` property."
    },
    "tooltip": {
      "meta": {
        "description": "Series-specific tooltip configuration."
      },
      "enabled": {
        "default": true,
        "description": "Whether or not to show tooltips when the series are hovered over."
      },
      "renderer": {
        "type": {
          "parameters": {
            "datum": "any",
            "title?": "string",
            "color?": "string",
            "xKey": "string",
            "xValue": "any",
            "xName?": "string",
            "yKey": "string",
            "yValue": "any",
            "yName?": "string",
            "sizeKey?": "string",
            "sizeName?": "string",
            "labelKey?": "string",
            "labelName?": "string"
          },
          "returnType": "string"
        },
        "description": "Function used to create the content for tooltips."
      }
    },
    "title": {
      "type": "string",
      "description": "The title to use for the series. Defaults to <code>yName</code> if it exists, or <code>yKey</code> if not."
    },
    "fill": {
      "default": "#f3622d",
      "description": "The colour of the fill for the markers."
    },
    "fillOpacity": {
      "default": 1,
      "description": "The opacity of the fill for the markers.",
      "min": 0,
      "max": 1,
      "step": 0.05
    },
    "stroke": {
      "default": "#aa4520",
      "description": "The colour of the stroke for the markers."
    },
    "strokeOpacity": {
      "default": 1,
      "description": "The opacity of the stroke for the markers.",
      "min": 0,
      "max": 1,
      "step": 0.05
    },
    "strokeWidth": {
      "default": 1,
      "description": "The width in pixels of the stroke for the markers.",
      "min": 0,
      "max": 20,
      "unit": "px"
    },
    "marker": {
      "meta": {
        "description": "Configuration for the markers used in the series."
      },
      "enabled": {
        "default": true,
        "description": "Whether or not to show markers."
      },
      "shape": {
        "type": "string | Marker",
        "default": "circle",
        "description": "The shape to use for the markers. You can also supply a custom marker by providing a <code>Marker</code> subclass.",
        "options": [
          "circle",
          "cross",
          "diamond",
          "plus",
          "square",
          "triangle"
        ]
      },
      "size": {
        "default": 8,
        "description": "The size in pixels of the markers.",
        "min": 1,
        "max": 20,
        "unit": "px"
      },
      "maxSize": {
        "default": 30,
        "description": "For series where the size of the marker is determined by the data, this determines the largest size a marker can be in pixels.",
        "min": 1,
        "max": 20,
        "unit": "px"
      },
      "fill": {
        "type": "string",
        "description": "The colour to use for marker fills. If this is not specified, the markers will take their fill from the series."
      },
      "stroke": {
        "type": "string",
        "description": "The colour to use for marker strokes. If this is not specified, the markers will take their stroke from the series."
      },
      "strokeWidth": {
        "type": "number",
        "description": "The width in pixels of the marker stroke. If this is not specified, the markers will take their stroke width from the series.",
        "min": 0,
        "max": 10,
        "unit": "px"
      },
      "formatter": {
        "type": {
          "parameters": {
            "datum": "any",
            "fill": "string",
            "stroke": "string",
            "strokeWidth": "number",
            "size": "number",
            "highlighted": "boolean",
            "xKey": "string",
            "yKey": "string"
          },
          "returnType": {
            "fill": "string",
            "stroke": "string",
            "strokeWidth": "number",
            "size": "number"
          }
        },
        "description": "Function used to return formatting for individual markers, based on the supplied information. If the current marker is highlighted, the <code>highlighted</code> property will be set to <code>true</code>; make sure to check this if you want to differentiate between the highlighted and un-highlighted states."
      }
    },
    "label": {
      "meta": {
        "description": "Configuration for the labels shown on top of data points."
      },
      "enabled": {
        "default": true,
        "description": "Whether or not the labels should be shown. Note: unlike other series where a label is shown for every data point, a scatter series label is only shown if it satisfies the following constraints: it doesn't overlap any markers, it doesn't overlap other labels."
      },
      "color": {
        "default": "rgba(70, 70, 70, 1)",
        "description": "The colour to use for the labels."
      },
      "fontStyle": {
        "default": "normal",
        "options": [
          "normal",
          "italic",
          "oblique"
        ],
        "description": "The font style to use for the labels."
      },
      "fontWeight": {
        "default": "normal",
        "options": [
          "normal",
          "bold",
          "bolder",
          "lighter",
          "100",
          "200",
          "300",
          "400",
          "500",
          "600",
          "700",
          "800",
          "900"
        ],
        "description": "The font weight to use for the labels.",
        "breakIndex": 4
      },
      "fontSize": {
        "default": 12,
        "description": "The font size in pixels to use for the labels.",
        "min": 1,
        "max": 30,
        "unit": "px"
      },
      "fontFamily": {
        "default": "Verdana, sans-serif",
        "suggestions": [
          "Verdana, sans-serif",
          "Arial, sans-serif",
          "Times New Roman, serif"
        ],
        "description": "The font family to use for the labels."
      }
    },
    "highlightStyle": {
      "meta": {
        "requiresWholeObject": true,
        "description": "Configuration for scatter series marker highlighting when a marker or a legend item is hovered over."
      },
      "item": {
        "meta": {
          "requiresWholeObject": true,
          "description": "Highlight style used for an individual markers when tapped or hovered over."
        },
        "fill": {
          "default": "yellow",
          "description": "The fill colour of a marker when tapped or hovered over. Use `undefined` for no highlight."
        },
        "stroke": {
          "type": "string",
          "description": "The stroke colour of a marker when tapped or hovered over. Use `undefined` for no highlight."
        },
        "strokeWidth": {
          "type": "number",
          "description": "The stroke width of a marker when tapped or hovered over. Use `undefined` for no highlight."
        }
      },
      "series": {
        "meta": {
          "requiresWholeObject": true,
          "description": "Highlight style used for whole series when one of its markers is tapped or hovered over."
        },
        "strokeWidth": {
          "type": "number",
          "description": "The stroke width of the rest of the markers when one of the markers in this series is tapped or hovered over. Use `undefined` for no highlight."
        },
        "dimOpacity": {
          "type": "number",
          "description": "The opacity of the whole series (including labels, if any) when another chart series is highlighted by hovering a series item or a legend item. Use `undefined` or `1` for no dimming."
        }
      }
    },
    "listeners": {
      "meta": {
        "description": "A map of event names to event listeners."
      },
      "nodeClick": {
        "type": {
          "parameters": {
            "type": "'nodeClick'",
            "series": "ScatterSeries",
            "datum": "any",
            "xKey": "string",
            "yKey": "string",
            "sizeKey?": "string"
          },
          "returnType": "any"
        },
        "description": "The listener to call when a scatter series node (marker) is clicked."
      }
    }
  },
  "pie": {
    "meta": {
      "displayName": "Series: Pie/Doughnut",
      "description": "Configuration for pie/doughnut series."
    },
    "angleKey": {
      "type": "string",
      "isRequired": true,
      "description": "The key to use to retrieve angle values from the data."
    },
    "angleName": {
      "type": "string",
      "description": "A human-readable description of the angle values. If supplied, this will be passed to the tooltip renderer as one of the parameters."
    },
    "labelKey": {
      "type": "string",
      "isRequired": true,
      "description": "The key to use to retrieve label values from the data."
    },
    "labelName": {
      "type": "string",
      "description": "A human-readable description of the label values. If supplied, this will be passed to the tooltip renderer as one of the parameters."
    },
    "radiusKey": {
      "type": "string",
      "description": "The key to use to retrieve radius values from the data."
    },
    "radiusName": {
      "type": "string",
      "description": "A human-readable description of the radius values. If supplied, this will be passed to the tooltip renderer as one of the parameters."
    },
    "data": {
      "type": "object[]",
      "isRequired": true,
      "description": "The data to use when rendering the series. If this is not supplied, data must be set on the chart instead."
    },
    "visible": {
      "default": true,
      "description": "Whether or not to display the series."
    },
    "showInLegend": {
      "default": true,
      "description": "Whether or not to include the series in the legend."
    },
    "cursor": {
      "type": "string",
      "default": "default",
      "description": "The cursor to use for hovered pie slices. This config is identical to the CSS `cursor` property."
    },
    "tooltip": {
      "meta": {
        "description": "Series-specific tooltip configuration."
      },
      "enabled": {
        "default": true,
        "description": "Whether or not to show tooltips when the series are hovered over."
      },
      "renderer": {
        "type": {
          "parameters": {
            "datum": "any",
            "title?": "string",
            "color?": "string",
            "angleKey": "string",
            "angleValue": "any",
            "angleName?": "string",
            "radiusKey?": "string",
            "radiusValue?": "any",
            "radiusName?": "string",
            "labelKey?": "string",
            "labelName?": "string"
          },
          "returnType": "string"
        },
        "description": "Function used to create the content for tooltips."
      }
    },
    "lineDash": {
      "default": [],
      "type": "number[]",
      "description": "Defines how the pie sector strokes are rendered. Every number in the array specifies the length in pixels of alternating dashes and gaps. For example, <code>[6, 3]</code> means dashes with a length of <code>6</code> pixels with gaps between of <code>3</code> pixels."
    },
    "lineDashOffset": {
      "default": 0,
      "type": "number",
      "description": "The initial offset of the dashed line in pixels.",
      "min": 0,
      "max": 200,
      "unit": "px"
    },
    "rotation": {
      "default": 0,
      "description": "The rotation of the pie series in degrees.",
      "min": -359,
      "max": 359,
      "unit": "&deg"
    },
    "innerRadiusOffset": {
      "default": 0,
      "description": "The offset in pixels of the inner radius of the series. Used to construct doughnut charts. If this is not given, or a value of zero is given, a pie chart will be rendered.",
      "min": -50,
      "max": 50,
      "unit": "px"
    },
    "outerRadiusOffset": {
      "default": 0,
      "description": "The offset in pixels of the outer radius of the series. Used to construct doughnut charts.",
      "min": -50,
      "max": 50,
      "unit": "px"
    },
    "title": {
      "meta": {
        "description": "Configuration for the series title."
      },
      "enabled": {
        "default": true,
        "description": "Whether or not the title should be shown."
      },
      "text": {
        "type": "string",
        "description": "The text to show in the title."
      },
      "color": {
        "default": "#000000",
        "description": "The colour to use for the title."
      },
      "fontStyle": {
        "default": "normal",
        "options": [
          "normal",
          "italic",
          "oblique"
        ],
        "description": "The font style to use for the title."
      },
      "fontWeight": {
        "default": "normal",
        "options": [
          "normal",
          "bold",
          "bolder",
          "lighter",
          "100",
          "200",
          "300",
          "400",
          "500",
          "600",
          "700",
          "800",
          "900"
        ],
        "description": "The font weight to use for the title.",
        "breakIndex": 4
      },
      "fontSize": {
        "default": 10,
        "description": "The font size in pixels to use for the title.",
        "min": 1,
        "max": 30,
        "unit": "px"
      },
      "fontFamily": {
        "default": "Verdana, sans-serif",
        "suggestions": [
          "Verdana, sans-serif",
          "Arial, sans-serif",
          "Times New Roman, serif"
        ],
        "description": "The font family to use for the title."
      }
    },
    "fills": {
      "type": "string[]",
      "default": [
        "#f3622d",
        "#fba71b",
        "#57b757",
        "#41a9c9",
        "#4258c9",
        "#9a42c8",
        "#c84164",
        "#888888"
      ],
      "description": "The colours to cycle through for the fills of the segments."
    },
    "fillOpacity": {
      "default": 1,
      "description": "The opacity of the fill for the segments.",
      "min": 0,
      "max": 1,
      "step": 0.05
    },
    "strokes": {
      "type": "string[]",
      "default": [
        "#aa4520",
        "#b07513",
        "#3d803d",
        "#2d768d",
        "#2e3e8d",
        "#6c2e8c",
        "#8c2d46",
        "#5f5f5f"
      ],
      "description": "The colours to cycle through for the strokes of the segments."
    },
    "strokeOpacity": {
      "default": 1,
      "description": "The opacity of the stroke for the segments.",
      "min": 0,
      "max": 1,
      "step": 0.05
    },
    "strokeWidth": {
      "default": 1,
      "description": "The width in pixels of the stroke for the segments.",
      "min": 0,
      "max": 20,
      "unit": "px"
    },
    "highlightStyle": {
      "meta": {
        "requiresWholeObject": true,
        "description": "Configuration for pie series sector highlighting when a pie sector or a corresponding legend item is hovered over."
      },
      "item": {
        "meta": {
          "requiresWholeObject": true,
          "description": "Highlight style used for an individual sectors when tapped or hovered over."
        },
        "fill": {
          "default": "yellow",
          "description": "The fill colour of a sector when tapped or hovered over. Use `undefined` for no highlight."
        },
        "stroke": {
          "type": "string",
          "description": "The stroke colour of a sector when tapped or hovered over. Use `undefined` for no highlight."
        },
        "strokeWidth": {
          "type": "number",
          "description": "The stroke width of a sector when tapped or hovered over. Use `undefined` for no highlight."
        }
      },
      "series": {
        "meta": {
          "requiresWholeObject": true,
          "description": "Highlight style used for whole series when one of its sectors is tapped or hovered over."
        },
        "strokeWidth": {
          "type": "number",
          "description": "The stroke width of the rest of the sectors when one of the sectors in this series is tapped or hovered over. Use `undefined` for no highlight."
        },
        "dimOpacity": {
          "type": "number",
          "description": "The opacity of the whole series (including labels, if any) when another chart series is highlighted by hovering a series item or a legend item. Use `undefined` or `1` for no dimming."
        }
      }
    },
    "label": {
      "meta": {
        "description": "Configuration for the labels used for the segments."
      },
      "enabled": {
        "default": true,
        "description": "Whether or not the labels should be shown."
      },
      "color": {
        "default": "#000000",
        "description": "The colour to use for the labels."
      },
      "fontStyle": {
        "default": "normal",
        "options": [
          "normal",
          "italic",
          "oblique"
        ],
        "description": "The font style to use for the labels."
      },
      "fontWeight": {
        "default": "normal",
        "options": [
          "normal",
          "bold",
          "bolder",
          "lighter",
          "100",
          "200",
          "300",
          "400",
          "500",
          "600",
          "700",
          "800",
          "900"
        ],
        "description": "The font weight to use for the labels.",
        "breakIndex": 4
      },
      "fontSize": {
        "default": 12,
        "description": "The font size in pixels to use for the labels.",
        "min": 1,
        "max": 30,
        "unit": "px"
      },
      "fontFamily": {
        "default": "Verdana, sans-serif",
        "suggestions": [
          "Verdana, sans-serif",
          "Arial, sans-serif",
          "Times New Roman, serif"
        ],
        "description": "The font family to use for the labels."
      },
      "offset": {
        "default": 3,
        "description": "Distance in pixels between the callout line and the label text.",
        "min": 0,
        "max": 20,
        "unit": "px"
      },
      "minAngle": {
        "default": 20,
        "description": "Minimum angle in degrees required for a segment to show a label.",
        "min": 0,
        "max": 360,
        "unit": "&deg;"
      },
      "formatter": {
        "type": {
          "parameters": {
            "value": "string"
          },
          "returnType": "string"
        },
        "description": "Function used to turn 'labelKey' values into text to be displayed next to each pie sector. Be default the values are simply stringified."
      }
    },
    "callout": {
      "meta": {
        "description": "Configuration for the callouts used with the labels for the segments."
      },
      "colors": {
        "type": "string[]",
        "default": [
          "#aa4520",
          "#b07513",
          "#3d803d",
          "#2d768d",
          "#2e3e8d",
          "#6c2e8c",
          "#8c2d46",
          "#5f5f5f"
        ],
        "description": "The colours to cycle through for the strokes of the callouts."
      },
      "strokeWidth": {
        "default": 1,
        "description": "The width in pixels of the stroke for callout lines.",
        "min": 1,
        "max": 10,
        "unit": "px"
      },
      "length": {
        "default": 10,
        "description": "The length in pixels of the callout lines.",
        "min": 0,
        "max": 20,
        "unit": "px"
      }
    },
    "shadow": {
      "meta": {
        "description": "Configuration for the shadow used behind the chart series."
      },
      "enabled": {
        "default": true,
        "description": "Whether or not the shadow is visible."
      },
      "color": {
        "default": "rgba(0, 0, 0, 0.5)",
        "description": "The colour of the shadow."
      },
      "xOffset": {
        "default": 0,
        "description": "The horizontal offset in pixels for the shadow.",
        "min": -20,
        "max": 20,
        "unit": "px"
      },
      "yOffset": {
        "default": 0,
        "description": "The vertical offset in pixels for the shadow.",
        "min": -20,
        "max": 20,
        "unit": "px"
      },
      "blur": {
        "default": 5,
        "description": "The radius of the shadow's blur, given in pixels.",
        "min": 0,
        "max": 20,
        "unit": "px"
      }
    },
    "listeners": {
      "meta": {
        "description": "A map of event names to event listeners."
      },
      "nodeClick": {
        "type": {
          "parameters": {
            "type": "'nodeClick'",
            "series": "PieSeries",
            "datum": "any",
            "angleKey": "string",
            "radiusKey?": "string"
          },
          "returnType": "any"
        },
        "description": "The listener to call when a pie slice is clicked."
      }
    }
  },
  "treemap": {
    "meta": {
      "displayName": "Series: Treemap",
      "description": "Configuration for the treemap series."
    },
    "title": {
      "meta": {
        "description": "The label configuration for the top-level parent tiles."
      },
      "color": {
        "default": "white",
        "description": "The colour of the text."
      },
      "fontStyle": {
        "default": "normal",
        "options": [
          "normal",
          "italic",
          "oblique"
        ],
        "description": "The font style to use for the legend."
      },
      "fontWeight": {
        "default": "bold",
        "options": [
          "normal",
          "bold",
          "bolder",
          "lighter",
          "100",
          "200",
          "300",
          "400",
          "500",
          "600",
          "700",
          "800",
          "900"
        ],
        "description": "The font weight to use for the legend.",
        "breakIndex": 4
      },
      "fontSize": {
        "default": 12,
        "description": "The font size in pixels to use for the legend.",
        "min": 1,
        "max": 30,
        "unit": "px"
      },
      "fontFamily": {
        "default": "Verdana, sans-serif",
        "suggestions": [
          "Verdana, sans-serif",
          "Arial, sans-serif",
          "Times New Roman, serif"
        ],
        "description": "The font family to use for the legend."
      },
      "padding": {
        "default": 15,
        "description": "The amount of the tile's vertical space to reserve for the label.",
        "min": 4,
        "max": 20,
        "unit": "px"
      }
    },
    "subtitle": {
      "meta": {
        "description": "The label configuration for the children of the top-level parent tiles."
      },
      "color": {
        "default": "white",
        "description": "The colour of the text."
      },
      "fontStyle": {
        "default": "normal",
        "options": [
          "normal",
          "italic",
          "oblique"
        ],
        "description": "The font style to use for the legend."
      },
      "fontWeight": {
        "default": "bold",
        "options": [
          "normal",
          "bold",
          "bolder",
          "lighter",
          "100",
          "200",
          "300",
          "400",
          "500",
          "600",
          "700",
          "800",
          "900"
        ],
        "description": "The font weight to use for the legend.",
        "breakIndex": 4
      },
      "fontSize": {
        "default": 9,
        "description": "The font size in pixels to use for the legend.",
        "min": 1,
        "max": 30,
        "unit": "px"
      },
      "fontFamily": {
        "default": "Verdana, sans-serif",
        "suggestions": [
          "Verdana, sans-serif",
          "Arial, sans-serif",
          "Times New Roman, serif"
        ],
        "description": "The font family to use for the legend."
      },
      "padding": {
        "default": 13,
        "description": "The amount of the tile's vertical space to reserve for the label.",
        "min": 4,
        "max": 20,
        "unit": "px"
      }
    },
    "labels": {
      "meta": {
        "description": "Configuration for the tile labels."
      },
      "large": {
        "meta": {
          "description": "The label configuration for the large leaf tiles."
        },
        "color": {
          "default": "white",
          "description": "The colour of the text."
        },
        "fontStyle": {
          "default": "normal",
          "options": [
            "normal",
            "italic",
            "oblique"
          ],
          "description": "The font style to use for the legend."
        },
        "fontWeight": {
          "default": "bold",
          "options": [
            "normal",
            "bold",
            "bolder",
            "lighter",
            "100",
            "200",
            "300",
            "400",
            "500",
            "600",
            "700",
            "800",
            "900"
          ],
          "description": "The font weight to use for the legend.",
          "breakIndex": 4
        },
        "fontSize": {
          "default": 18,
          "description": "The font size in pixels to use for the legend.",
          "min": 1,
          "max": 30,
          "unit": "px"
        },
        "fontFamily": {
          "default": "Verdana, sans-serif",
          "suggestions": [
            "Verdana, sans-serif",
            "Arial, sans-serif",
            "Times New Roman, serif"
          ],
          "description": "The font family to use for the legend."
        }
      },
      "medium": {
        "meta": {
          "description": "The label configuration for the medium-sized leaf tiles."
        },
        "color": {
          "default": "white",
          "description": "The colour of the text."
        },
        "fontStyle": {
          "default": "normal",
          "options": [
            "normal",
            "italic",
            "oblique"
          ],
          "description": "The font style to use for the legend."
        },
        "fontWeight": {
          "default": "bold",
          "options": [
            "normal",
            "bold",
            "bolder",
            "lighter",
            "100",
            "200",
            "300",
            "400",
            "500",
            "600",
            "700",
            "800",
            "900"
          ],
          "description": "The font weight to use for the legend.",
          "breakIndex": 4
        },
        "fontSize": {
          "default": 14,
          "description": "The font size in pixels to use for the legend.",
          "min": 1,
          "max": 30,
          "unit": "px"
        },
        "fontFamily": {
          "default": "Verdana, sans-serif",
          "suggestions": [
            "Verdana, sans-serif",
            "Arial, sans-serif",
            "Times New Roman, serif"
          ],
          "description": "The font family to use for the legend."
        }
      },
      "small": {
        "meta": {
          "description": "The label configuration for the small leaf tiles."
        },
        "color": {
          "default": "white",
          "description": "The colour of the text."
        },
        "fontStyle": {
          "default": "normal",
          "options": [
            "normal",
            "italic",
            "oblique"
          ],
          "description": "The font style to use for the legend."
        },
        "fontWeight": {
          "default": "bold",
          "options": [
            "normal",
            "bold",
            "bolder",
            "lighter",
            "100",
            "200",
            "300",
            "400",
            "500",
            "600",
            "700",
            "800",
            "900"
          ],
          "description": "The font weight to use for the legend.",
          "breakIndex": 4
        },
        "fontSize": {
          "default": 10,
          "description": "The font size in pixels to use for the legend.",
          "min": 1,
          "max": 30,
          "unit": "px"
        },
        "fontFamily": {
          "default": "Verdana, sans-serif",
          "suggestions": [
            "Verdana, sans-serif",
            "Arial, sans-serif",
            "Times New Roman, serif"
          ],
          "description": "The font family to use for the legend."
        }
      },
      "color": {
        "meta": {
          "description": "The configuration for the labels showing the value of the 'colorKey'."
        },
        "color": {
          "default": "white",
          "description": "The colour of the text."
        },
        "fontStyle": {
          "default": "normal",
          "options": [
            "normal",
            "italic",
            "oblique"
          ],
          "description": "The font style to use for the legend."
        },
        "fontWeight": {
          "default": "bold",
          "options": [
            "normal",
            "bold",
            "bolder",
            "lighter",
            "100",
            "200",
            "300",
            "400",
            "500",
            "600",
            "700",
            "800",
            "900"
          ],
          "description": "The font weight to use for the legend.",
          "breakIndex": 4
        },
        "fontSize": {
          "default": 12,
          "description": "The font size in pixels to use for the legend.",
          "min": 1,
          "max": 30,
          "unit": "px"
        },
        "fontFamily": {
          "default": "Verdana, sans-serif",
          "suggestions": [
            "Verdana, sans-serif",
            "Arial, sans-serif",
            "Times New Roman, serif"
          ],
          "description": "The font family to use for the legend."
        }
      }
    },
    "labelKey": {
      "type": "string",
      "default": "label",
      "description": "The name of the node key containing the label."
    },
    "sizeKey": {
      "type": "string",
      "default": "size",
      "description": "The name of the node key containing the size value."
    },
    "colorKey": {
      "type": "string",
      "default": "color",
      "description": "The name of the node key containing the color value. This value (along with `colorDomain` and `colorRange` configs) will be used to determine the tile color."
    },
    "colorDomain": {
      "type": "number[]",
      "default": "[-5, 5]",
      "description": "The domain the 'colorKey' values belong to. The domain can contain more than two stops, for example `[-5, 0, -5]`. In that case the 'colorRange' should also use a matching number of colors."
    },
    "colorRange": {
      "type": "string[]",
      "default": "['#cb4b3f', '#6acb64']",
      "description": "The color range to interpolate the numeric `colorDomain` into. For example, if the `colorDomain` is `[-5, 5]` and `colorRange` is `['red', 'green']`, a `colorKey` value of `-5` will be assigned the 'red' color, `5` - 'green' color and `0` a blend of 'red' and 'green'."
    },
    "colorParents": {
      "type": "boolean",
      "default": false,
      "description": "Whether or not to assign colors to non-leaf nodes based on 'colorKey'."
    },
    "tooltip": {
      "meta": {
        "description": "Series-specific tooltip configuration."
      },
      "enabled": {
        "default": true,
        "description": "Whether or not to show tooltips when the series are hovered over."
      },
      "renderer": {
        "type": {
          "parameters": {
            "datum": "any",
            "labelKey": "string",
            "sizeKey?": "string",
            "colorKey?": "string"
          },
          "returnType": "string"
        },
        "description": "Function used to create the content for tooltips."
      }
    },
    "nodePadding": {
      "type": "number",
      "default": 2,
      "description": "The amount "
    },
    "gradient": {
      "type": "boolean",
      "default": true,
      "description": "Whether or not to use gradients for treemap tiles."
    },
    "cursor": {
      "type": "string",
      "default": "default",
      "description": "The cursor to use for hovered treemap tiles. This config is identical to the CSS `cursor` property."
    }
  },
  "histogram": {
    "data": {
      "type": "object[]",
      "isRequired": true,
      "description": "The data to use when rendering the series. If this is not supplied, data must be set on the chart instead."
    },
    "visible": {
      "default": true,
      "description": "Whether or not to display the series."
    },
    "showInLegend": {
      "default": true,
      "description": "Whether or not to include the series in the legend."
    },
    "cursor": {
      "type": "string",
      "default": "default",
      "description": "The cursor to use for hovered histogram bars. This config is identical to the CSS `cursor` property."
    },
    "tooltip": {
      "meta": {
        "description": "Series-specific tooltip configuration."
      },
      "enabled": {
        "default": true,
        "description": "Whether or not to show tooltips when the series are hovered over."
      },
      "renderer": {
        "type": {
          "parameters": {
            "datum": "any",
            "title?": "string",
            "color?": "string",
            "xKey": "string",
            "xValue": "any",
            "xName?": "string",
            "yKey": "string",
            "yValue": "any",
            "yName?": "string",
            "sizeKey?": "string",
            "sizeName?": "string",
            "labelKey?": "string",
            "labelName?": "string"
          },
          "returnType": "string"
        },
        "description": "Function used to create the content for tooltips."
      }
    },
    "xKey": {
      "type": "string",
      "isRequired": true,
      "description": "The key to use to retrieve x-values from the data."
    },
    "xName": {
      "type": "string",
      "description": "A human-readable description of the x-values. If supplied, this will be shown in the default tooltip and passed to the tooltip renderer as one of the parameters."
    },
    "yKey": {
      "type": "string",
      "isRequired": false,
      "description": "The key to use to retrieve y-values from the data."
    },
    "yName": {
      "type": "string",
      "description": "A human-readable description of the y-values. If supplied, this will be shown in the default tooltip and passed to the tooltip renderer as one of the parameters."
    },
    "meta": {
      "displayName": "Series: Histogram",
      "description": "Configuration for histogram series."
    },
    "binCount": {
      "type": "number",
      "description": "The number of bins to try to split the x axis into. Clashes with the <code>bins</code> setting.",
      "default": 10,
      "min": 1,
      "max": 30
    },
    "bins": {
      "type": "number[][]",
      "description": "Set the bins explicitly. The bins need not be of equal width. Clashes with the <code>binCount</code> setting."
    },
    "aggregation": {
      "type": "string",
      "description": "Dictates how the bins are aggregated. If set to 'sum', the value shown for the bins will be the total of the yKey values. If set to 'mean', it will display the average yKey value of the bin",
      "default": "sum",
      "options": [
        "sum",
        "mean"
      ]
    },
    "areaPlot": {
      "type": "boolean",
      "description": "For variable width bins, if true the histogram will represent the aggregated <code>yKey</code> values using the area of the bar. Otherwise, the height of the var represents the value as per a normal bar chart. This is useful for keeping an undistorted curve displayed when using variable-width bins",
      "default": "false"
    },
    "lineDash": {
      "default": [],
      "type": "number[]",
      "description": "Defines how the column strokes are rendered. Every number in the array specifies the length in pixels of alternating dashes and gaps. For example, <code>[6, 3]</code> means dashes with a length of <code>6</code> pixels with gaps between of <code>3</code> pixels."
    },
    "lineDashOffset": {
      "default": 0,
      "type": "number",
      "description": "The initial offset of the dashed line in pixels.",
      "min": 0,
      "max": 200,
      "unit": "px"
    },
    "highlightStyle": {
      "meta": {
        "requiresWholeObject": true,
        "description": "Configuration for series item and whole series highlighting when columns or legend items are hovered over."
      },
      "item": {
        "meta": {
          "requiresWholeObject": true,
          "description": "Highlight style used for an individual column when tapped or hovered over."
        },
        "fill": {
          "default": "yellow",
          "description": "The fill colour of a column when hovered over. Use `undefined` for no highlight."
        },
        "stroke": {
          "type": "string",
          "description": "The stroke colour of a column when hovered over. Use `undefined` for no highlight."
        },
        "strokeWidth": {
          "type": "number",
          "description": "The stroke width of a column when hovered over. Use `undefined` for no highlight."
        }
      },
      "series": {
        "meta": {
          "requiresWholeObject": true,
          "description": "Highlight style used for the whole series when a single column is tapped or hovered over."
        },
        "strokeWidth": {
          "type": "number",
          "description": "The stroke width of the rest of the columns when an individual column is tapped or hovered over, or when a legend item is hovered over. Use `undefined` for no highlight."
        },
        "dimOpacity": {
          "type": "number",
          "description": "The opacity of the series when another chart series is highlighted by hovering a series item or a legend item. Use `undefined` or `1` for no dimming."
        }
      }
    },
    "fill": {
      "default": "#f3622d",
      "description": "The colour of the fill for the histogram bars."
    },
    "fillOpacity": {
      "default": 1,
      "description": "The opacity of the fill for the histogram bars.",
      "min": 0,
      "max": 1,
      "step": 0.05
    },
    "stroke": {
      "default": "#aa4520",
      "description": "The colour of the stroke for the histogram bars."
    },
    "strokeOpacity": {
      "default": 1,
      "description": "The opacity of the stroke for the histogram bars.",
      "min": 0,
      "max": 1,
      "step": 0.05
    },
    "strokeWidth": {
      "default": 1,
      "description": "The width in pixels of the stroke for the histogram bars.",
      "min": 0,
      "max": 20,
      "unit": "px"
    },
    "listeners": {
      "meta": {
        "description": "A map of event names to event listeners."
      },
      "nodeClick": {
        "type": {
          "parameters": {
            "type": "'nodeClick'",
            "series": "HistogramSeries",
            "datum": "any",
            "xKey": "string"
          },
          "returnType": "any"
        },
        "description": "The listener to call when a histogram bar is clicked."
      }
    }
  }
}