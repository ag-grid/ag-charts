// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`json module #jsonDiff for non-trivial cases should correctly diff complex object structures 1`] = `
Object {
  "changing": "123",
  "foo": Object {
    "bar1": 2,
  },
  "hello1": Object {
    "nested": Object {
      "nestedX2": Object {
        "added": 123,
      },
    },
    "nestedAdd": Object {
      "primitive": 123,
    },
  },
  "removed": undefined,
  "removed2": undefined,
}
`;

exports[`json module #jsonDiff for non-trivial cases should correctly diff function changes in arrays 1`] = `
Object {
  "foo": Array [
    Object {
      "fn": [Function],
    },
  ],
}
`;

exports[`json module #jsonDiff for trivial cases should correctly diff primitives 1`] = `
Object {
  "alice": 2022-01-27T00:00:00.000Z,
  "foo": "bar",
  "func": [Function],
  "hello": 123,
}
`;

exports[`json module #jsonMerge for trivial cases should honour DELETE value 1`] = `
Object {
  "a": 1,
  "b": "b",
  "d": Object {
    "1": 1,
    "3": 3,
  },
}
`;

exports[`json module #jsonMerge for trivial cases should merge array properties correctly 1`] = `
Object {
  "a": Array [
    Array [
      Object {
        "x2": 1,
      },
      Object {
        "y2": 1,
      },
    ],
    Array [
      Object {
        "m2": 2,
        "n2": 2,
      },
    ],
  ],
  "b": Array [],
  "c": Array [
    10,
    9,
    8,
    7,
    6,
  ],
}
`;

exports[`json module #jsonMerge for trivial cases should merge arrays correctly 1`] = `
Array [
  Array [
    Object {
      "x2": 1,
    },
    Object {
      "y2": 1,
    },
  ],
  Array [
    Object {
      "m2": 2,
      "n2": 2,
    },
  ],
]
`;

exports[`json module #jsonMerge for trivial cases should merge primitives correctly 1`] = `
Object {
  "date": 2022-01-27T00:00:00.000Z,
  "date2": 2022-01-27T00:00:00.000Z,
  "date3": 2022-01-27T00:00:00.000Z,
  "fn": [Function],
  "fn2": [Function],
  "foo": "bar",
  "foo2": "bar2",
  "foo3": "bar2",
  "no": 2,
  "no2": 2,
}
`;

exports[`json module #jsonMerge for trivial cases should take highest precedent value when types conflict 1`] = `
Object {
  "a": "a",
  "b": Object {},
}
`;
