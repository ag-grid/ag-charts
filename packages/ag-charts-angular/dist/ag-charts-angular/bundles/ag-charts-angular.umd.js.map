{"version":3,"file":"ag-charts-angular.umd.js","sources":["../../../projects/ag-charts-angular/src/lib/ag-charts-angular.component.ts","../../../projects/ag-charts-angular/src/lib/ag-charts-angular.module.ts","../../../projects/ag-charts-angular/src/ag-charts-angular.ts"],"sourcesContent":["import { AfterViewInit, Component, EventEmitter, ElementRef, Input, Output, OnChanges, OnDestroy, ViewEncapsulation } from \"@angular/core\";\n\nimport { AgChartInstance, AgChart, AgChartOptions } from 'ag-charts-community';\n\n// noinspection AngularIncorrectTemplateDefinition\n@Component({\n    selector: 'ag-charts-angular',\n    template: '',\n    encapsulation: ViewEncapsulation.None\n})\nexport class AgChartsAngular implements AfterViewInit, OnChanges, OnDestroy {\n\n    private _nativeElement: any;\n    private _initialised = false;\n\n    public chart?: AgChartInstance;\n\n    @Input()\n    public options: AgChartOptions = {};\n\n    @Output()\n    public onChartReady: EventEmitter<AgChartInstance> = new EventEmitter();\n\n    constructor(elementDef: ElementRef) {\n        this._nativeElement = elementDef.nativeElement;\n    }\n\n    ngAfterViewInit(): void {\n        const options = this.applyContainerIfNotSet(this.options);\n\n        this.chart = AgChart.create(options);\n        this._initialised = true;\n\n        (this.chart as any).chart.waitForUpdate()\n            .then(() => {\n                this.onChartReady.emit(this.chart);\n            });\n    }\n\n    // noinspection JSUnusedGlobalSymbols,JSUnusedLocalSymbols\n    ngOnChanges(changes: any): void {\n        if (!this._initialised || !this.chart) {\n            return;\n        }\n\n        AgChart.update(this.chart, this.applyContainerIfNotSet(this.options));\n    }\n\n    public ngOnDestroy(): void {\n        if (this._initialised && this.chart) {\n            this.chart.destroy();\n            this.chart = undefined;\n            this._initialised = false;\n        }\n    }\n\n    private applyContainerIfNotSet(propsOptions: AgChartOptions) {\n        if (propsOptions.container) {\n            return propsOptions;\n        }\n\n        return {...propsOptions, container: this._nativeElement};\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { AgChartsAngular } from './ag-charts-angular.component';\n\n\n\n@NgModule({\n  declarations: [AgChartsAngular],\n  imports: [\n  ],\n  exports: [AgChartsAngular]\n})\nexport class AgChartsAngularModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["EventEmitter","AgChart","i0","Component","ViewEncapsulation","Input","Output","NgModule"],"mappings":"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"}