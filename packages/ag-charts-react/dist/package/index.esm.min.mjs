var c=Object.defineProperty,h=Object.defineProperties,l=Object.getOwnPropertyDescriptors,a=Object.getOwnPropertySymbols,f=Object.prototype.hasOwnProperty,u=Object.prototype.propertyIsEnumerable,s=(r,t,e)=>t in r?c(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e,n=(r,t)=>{for(var e in t||(t={}))f.call(t,e)&&s(r,e,t[e]);if(a)for(var e of a(t))u.call(t,e)&&s(r,e,t[e]);return r},_=(r,t)=>h(r,l(t));import*as d from"prop-types";import{Component as m,createElement as v,createRef as y}from"react";import{AgCharts as p}from"ag-charts-community";var i=class extends m{constructor(r){super(r),this.props=r,this.chartRef=y()}render(){return v("div",{style:this.createStyleForDiv(),ref:this.chartRef})}createStyleForDiv(){return n({height:"100%"},this.props.containerStyle)}componentDidMount(){const r=this.applyContainerIfNotSet(this.props.options),t=p.create(r);this.chart=t,t.chart.waitForUpdate().then(()=>{var e,o;return(o=(e=this.props).onChartReady)==null?void 0:o.call(e,t)})}applyContainerIfNotSet(r){return r.container?r:_(n({},r),{container:this.chartRef.current})}shouldComponentUpdate(r){return this.processPropsChanges(this.props,r),!1}processPropsChanges(r,t){this.chart&&p.update(this.chart,this.applyContainerIfNotSet(t.options))}componentWillUnmount(){this.chart&&(this.chart.destroy(),this.chart=void 0)}};i.propTypes={options:d.object};export{i as AgChartsReact};
