// CSS directly lifted from Grid repo

@use '../../design-system/' as *;

.header {
    display: flex;
    align-items: center;
    position: relative;
    background-color: var(--site-header-background);

    @media screen and (min-width: $breakpoint-docs-nav-medium) {
        position: sticky;
        top: 0;
        z-index: 4;
    }

    #{$darkmode-selector} & {
        background: var(--color-bg-primary);
        border-bottom: 1px solid #3b4754;
    }
}

.headerInner {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    width: 100%;
    min-height: $site-header-height;

    @media screen and (max-width: $breakpoint-site-header-small) {
        // Required for collapsible mobile menu
        :global(#main-nav),
        :global(#main-nav) > div {
            width: 100%;
        }
    }

    @media screen and (min-width: $breakpoint-docs-nav-medium) {
        flex-wrap: unset;
        padding-left: $spacing-size-2;
        padding-right: $spacing-size-2;
    }
}

.headerLogo {
    display: flex;
    align-items: center;
    min-height: $site-header-height;
    padding: $spacing-size-2 10px;
    margin-right: 100%;

    svg {
        width: unset;
        height: 34px;
    }

    @media screen and (min-width: $breakpoint-docs-nav-medium) {
        margin-right: auto;
    }
}

.mobileNavButton {
    width: 100%;
    margin: 0 16px 8px;

    @media screen and (min-width: $breakpoint-docs-search-small) {
        width: auto;
        margin-right: 0;
    }

    @media screen and (min-width: $breakpoint-docs-nav-medium) {
        display: none;
    }
}

.mobileMenuButton {
    --button-color: transparent;
    --border-radius: 0;
    --button-hover-color: var(--dark-blue-700);

    appearance: none;
    display: flex;
    justify-content: center;
    align-items: center;
    height: $site-header-height;
    margin-left: $spacing-size-2;
    padding: 0 16px 0 14px;
    border: none;
    transition: background-color 0.4s ease-in-out;

    &:focus {
        box-shadow: none;
    }

    &:focus-visible {
        box-shadow: inset 0 0 0 2px var(--button-focus-box-shadow-color);
    }

    &[aria-expanded='true'],
    &:hover[aria-expanded='true'] {
        background-color: var(--site-nav-background);
    }

    svg {
        position: relative;
        left: 1px;
    }

    @media screen and (max-width: $breakpoint-docs-nav-medium) {
        position: absolute;
        top: 0;
        right: 0;
        background-color: transparent !important;
    }

    @media screen and (min-width: $breakpoint-site-header-small) {
        display: none !important;
    }

    #{$darkmode-selector} & {
        --button-active-color: var(--background-300);
    }
}

.menuIcon {
    g {
        transition: transform 0.2s 0.2s;
    }

    rect {
        fill: #fff;
        transition: transform 0.2s;
    }

    :global(.middle) {
        transition: opacity 0s 0.2s;
    }

    :global(.top) rect {
        transform-origin: center 8px;
    }

    :global(.bottom) rect {
        transform-origin: center 28px;
    }

    .mobileMenuButton[aria-expanded='true'] & {
        g {
            transition: transform 0.2s;
        }

        rect {
            transition: transform 0.2s 0.2s;
        }

        :global(.top) {
            transform: translateY(10px);
        }

        :global(.top) rect {
            transform: rotate(45deg);
        }

        :global(.middle) {
            opacity: 0;
        }

        :global(.bottom) {
            transform: translateY(-10px);
        }

        :global(.bottom) rect {
            transform: rotate(-45deg);
        }
    }
}

#mainNav {
    width: 100%;
}

.mainNav {
    --text-color: var(--white);
    --link-color: var(--white);
    --link-hover-color: var(--white);

    width: 100%;
    background-color: var(--site-nav-background);

    @media screen and (min-width: $breakpoint-site-header-small) {
        position: absolute;
        top: 0;
        right: 0;
        width: calc(100vw - 240px);
        background-color: unset;
    }

    @media screen and (min-width: $breakpoint-docs-nav-medium) {
        display: block !important;
        position: unset;
        width: unset !important;
        margin-left: $spacing-size-4;
        overflow: visible;
    }

    @media screen and (min-width: $breakpoint-site-header-large) {
        margin-left: auto;
    }
}

.navItemList {
    @media screen and (min-width: $breakpoint-site-header-small) {
        display: flex;
        height: $site-header-height;
        align-items: center;
        justify-content: flex-end;
    }
}

.navItem {
    @media screen and (min-width: $breakpoint-site-header-small) {
        &:hover a::after {
            opacity: 0.25;
            transform: scaleX(1);
        }

        &.navItemActive .navLink {
            #{$darkmode-selector} & {
                opacity: 1;
            }
        }

        &.navItemActive a::after {
            opacity: 0.5;
            transform: scaleX(1);

            #{$darkmode-selector} & {
                opacity: 0.75;
            }
        }
    }

    #{$darkmode-selector} & {
        @media screen and (min-width: $breakpoint-site-header-small) {
            border-bottom: none;
        }
    }
}

.navLink {
    --horizontal-padding: #{$spacing-size-4 - 2px};

    display: block;
    position: relative;
    padding: 19px 18px 16px;
    font-size: 17px;
    font-weight: 500;
    letter-spacing: 0.01em;
    color: var(--link-color);
    transition:
        color $transition-default-timing,
        opacity $transition-default-timing;
    cursor: pointer;

    &:hover {
        text-decoration: none;
        color: var(--link-color);
    }

    @media screen and (min-width: $breakpoint-site-header-small) {
        padding-left: var(--horizontal-padding);
        padding-right: var(--horizontal-padding);

        &::after {
            content: '';
            position: absolute;
            height: 2px;
            bottom: 12px;
            left: calc(var(--horizontal-padding) - #{$spacing-size-1});
            right: calc(var(--horizontal-padding) - #{$spacing-size-1});
            border-radius: 2px;
            background-color: var(--link-color);
            opacity: 0;
            transform: scaleX(0);
            transition:
                transform 0.33s ease-in-out,
                opacity 0.33s ease-in-out;
        }
    }

    #{$darkmode-selector} & {
        font-weight: 500;
        opacity: 0.8;
    }
}

.githubItem {
    order: 2;
}

.buttonItem {
    .navLink {
        padding: 19px 18px 16px !important;
    }

    a::after {
        display: none;
    }

    svg {
        --icon-size: 24px !important;

        margin-right: 4px;
        border-radius: 50%;
        fill: var(--white) !important;
    }

    @media screen and (min-width: $breakpoint-site-header-small) {
        span:not(.navLink) {
            display: none;
        }

        .navLink {
            padding-left: 12px !important;
            padding-right: 12px !important;
        }

        svg {
            margin-right: 0;
            transition: box-shadow 0.33s ease-in-out;
        }

        .navLink:hover svg {
            box-shadow:
                0 0 0 4px var(--site-header-background),
                0 0 0 6px rgba(white, 0.3);
        }
    }
}
