---
import { getFrameworkFromPath } from '@features/docs/utils/urlPaths';
import { Icon } from '@components/icon/Icon';
import { FeatureTitle } from './FeatureTitle';
import styles from '@design-system/modules/FeatureComparator.module.scss';
import { getEntry } from 'astro:content';

const { pathname } = Astro.url;
const { data: menuContent } = await getEntry('menu', 'data');
const features = [...menuContent.main.items, ...menuContent.charts.items].filter((i) => i.feature !== false);
const framework = getFrameworkFromPath(pathname);
---

<table class={styles.featureTable}>
    <tr>
        <th></th>
        <th>Community</th>
        <th>Enterprise <Icon name="enterprise" svgClasses={styles.enterpriseIcon} /></th>
    </tr>
    {
        features.map(({ title, isEnterprise, items }) => {
            const isRootNode = Array.isArray(items) && items.length > 0;
            return (
                <>
                    <tr>
                        <td colspan="3">
                            <FeatureTitle
                                title={title}
                                isRoot={isRootNode}
                                isEnterprise={isEnterprise}
                                framework={framework}
                            />
                        </td>
                    </tr>
                    <>
                        {isRootNode &&
                            items.map((node) => (
                                <tr>
                                    <td>
                                        <FeatureTitle
                                            title={node.title}
                                            path={node.path}
                                            isEnterprise={node.isEnterprise}
                                            framework={framework}
                                        />
                                    </td>
                                    <td>
                                        {node.isEnterprise ? (
                                            <Icon name="cross" svgClasses={[styles.featureNotAvailableIcon]} />
                                        ) : (
                                            <Icon name="tick" svgClasses={[styles.featureAvailableIcon]} />
                                        )}
                                    </td>
                                    <td>
                                        <Icon name="tick" svgClasses={[styles.featureAvailableIcon]} />
                                    </td>
                                </tr>
                            ))}
                    </>
                </>
            );
        })
    }
</table>
