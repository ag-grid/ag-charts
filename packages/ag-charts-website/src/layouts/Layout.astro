---
import { getEntry } from "astro:content";
import { getFavIconsData, getAppleTouchIconsData } from "../utils/favicons";
import SiteHeader from "../components/site-header/SiteHeader.astro";
import "../design-system/design-system.scss";
import { Footer } from "../components/footer/Footer";

export interface Props {
    title?: string;
    description?: string;
    showTopBar?: boolean;
}

const metadata = await getEntry("metadata", "metadata");

const {
    title = metadata.data.title,
    description = metadata.data.description,
    showTopBar,
} = Astro.props;
const path = Astro.url.pathname;
---

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="description" content={description} />
        <meta name="viewport" content="width=device-width" />
        {
            getFavIconsData().map(({ size, icon }: any) => (
                <link
                    rel="icon"
                    type="image/png"
                    sizes={`${size}x${size}`}
                    href={icon}
                />
            ))
        }
        {
            getAppleTouchIconsData().map(({ size, icon }: any) => (
                <link
                    rel="apple-touch-icon"
                    sizes={`${size}x${size}`}
                    href={icon}
                />
            ))
        }
        <meta name="generator" content={Astro.generator} />
        <title>{title}</title>
    </head>
    <body>
        <div class="mainContainer">
            <SiteHeader />
            {
                showTopBar && (
                    <div class="topBar">
                        <div class="page-margin">TODO: Top bar</div>
                    </div>
                )
            }

            <div class="contentViewport">
                <slot name="aside" />
                <slot />
            </div>
        </div>
        <Footer path={path} />

        <style lang="scss">
            @use "../design-system" as *;

            html {
                overflow-x: hidden;
            }

            main {
                flex: 1 1 auto;
                min-width: 0px;
            }

            .mainContainer {
                display: flex;
                flex-direction: column;
                min-height: 100vh;
                padding: 0;
                width: 100%;
            }

            .contentViewport {
                display: flex;
                flex-direction: column;
                flex-grow: 1;

                @media (min-width: $breakpoint-docs-nav-medium) {
                    flex-direction: row;
                }
            }

            .topBar {
                background-color: var(--toolbar-background);
                padding: $size-2 0;
            }
        </style>
    </body>
</html>
