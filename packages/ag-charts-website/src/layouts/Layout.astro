---
import { getEntry } from 'astro:content';
import { getFavIconsData, getAppleTouchIconsData } from '@utils/favicons';
import SiteHeader from '@components/site-header/SiteHeader.astro';
import '@design-system/design-system.scss';
import { Footer } from '@components/footer/Footer';
import { TopBar } from '@components/top-bar/TopBar';
import { FRAMEWORKS } from '@constants';
import { getFrameworkFromPath } from '@features/docs/utils/urlPaths';

export interface Props {
    title?: string;
    description?: string;
    showTopBar?: boolean;
}

const metadata = await getEntry('metadata', 'metadata');

const { title = metadata.data.title, description = metadata.data.description, showTopBar } = Astro.props;
const path = Astro.url.pathname;

const frameworks = FRAMEWORKS;
const framework = getFrameworkFromPath(path);
---

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="description" content={description} />
        <meta name="viewport" content="width=device-width" />
        {
            getFavIconsData().map(({ size, icon }: any) => (
                <link rel="icon" type="image/png" sizes={`${size}x${size}`} href={icon} />
            ))
        }
        {
            getAppleTouchIconsData().map(({ size, icon }: any) => (
                <link rel="apple-touch-icon" sizes={`${size}x${size}`} href={icon} />
            ))
        }
        <meta name="generator" content={Astro.generator} />
        <title>{title}</title>

        <script is:inline>
        const htmlEl = document.querySelector('html');
        const localDarkmode = localStorage['documentation:darkmode'];
        const isOSDarkmode = (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches).toString();

        htmlEl.classList.add('no-transitions');
        htmlEl.dataset.darkMode = localDarkmode !== undefined ? localDarkmode : isOSDarkmode;
        htmlEl.offsetHeight; // Trigger a reflow, flushing the CSS changes
        htmlEl.classList.remove('no-transitions');
        </script>
    </head>
    <body>
        <div class="mainContainer">
            <SiteHeader />
            {showTopBar && <TopBar client:load frameworks={frameworks} currentFramework={framework} path={path} />}

            <div class="contentViewport">
                <slot name="aside" />
                <slot />
            </div>
        </div>
        <Footer path={path} />

        <style lang="scss">
            @use '../design-system' as *;

            html {
                overflow-x: hidden;
            }

            main {
                flex: 1 1 auto;
                min-width: 0px;
            }

            .mainContainer {
                width: 100%;
                min-height: 100vh;
                padding: 0;
            }
        </style>
    </body>
</html>
