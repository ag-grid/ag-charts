---
import { getEntry } from 'astro:content';
import Layout from '@layouts/Layout.astro';
import { Icon, IconName } from '@components/icon/Icon';
import { getPageHashUrl } from '@features/gallery/utils/urlPaths';
import type { GalleryData, GalleryExample, GalleryExampleChartType } from '@ag-grid-types';
import { GalleryExampleLink } from '@features/gallery/components/GalleryExampleLink';
import { GalleryExampleThemeDropdown } from '@features/gallery/components/GalleryExampleThemeDropdown';

const galleryDataEntry = await getEntry('gallery', 'data');
const galleryData: GalleryData = galleryDataEntry?.data;
const { series } = galleryData;
---

<Layout>
    <div class="gallery-outer font-size-responsive font-size-small">
        <div class="menu">
            <ul class="list-style-none">
                {
                    series.map((series: GalleryExampleChartType) => (
                        <li>
                            <a href={getPageHashUrl({ chartSeriesName: series.name, isRelative: true })}>
                                <Icon client:only name={series.icon as IconName} />
                                <span class="name">{series.title}</span>
                                {series.enterprise && (
                                    <span class="enterpriseIcon">
                                        <Icon client:only name="enterprise" />
                                    </span>
                                )}
                            </a>
                        </li>
                    ))
                }
            </ul>
            <div class="menu-scroll-indicator"></div>
        </div>

        <div class="content">
            <GalleryExampleThemeDropdown client:only></GalleryExampleThemeDropdown>
            <div>
                {
                    series.map((series: GalleryExampleChartType) => (
                        <div class="chart-type" id={series.name}>
                            <div class="gallery-list">
                                {series.examples.map(({ title, name }: GalleryExample) => (
                                    <GalleryExampleLink
                                        client:visible
                                        className="galleryExample"
                                        label={title}
                                        exampleName={name}
                                    />
                                ))}
                            </div>
                        </div>
                    ))
                }
            </div>
        </div>
    </div>
</Layout>

<script>
    import { smoothScrollIntoView } from '@utils/smoothScrollIntoView';

    // Add smooth scrolling for menu anchor links
    document.querySelectorAll('a[href^="#"]').forEach((anchor) => {
        anchor.addEventListener('click', function (e) {
            e.preventDefault();
            const id = anchor.getAttribute('href').substring(1);
            smoothScrollIntoView({ id });
        });
    });
</script>

<style lang="scss">
    @use '../design-system' as *;

    $site-header-height: 64px;

    .enterpriseIcon {
        --text-color: red;
    }

    .gallery-outer {
        --horizontal-padding: #{$size-3};
        --menu-width: 12rem;
        --gallery-list-gap: #{$size-3};

        display: flex;
        flex-direction: row;
        position: relative;
        background-color: var(--ghost-blue);

    }

    .menu {
        position: sticky;
        flex-shrink: 0;
        max-height: calc(100vh - #{$site-header-height});
        width: calc(var(--menu-width) + var(--horizontal-padding));
        top: $site-header-height;
        padding-top: calc($size-7 + $size-2);
        padding-left: var(--horizontal-padding);
        background-color: var(--white);
        border-right: solid 1px var(--bright-blue-gray);
        overflow-y: scroll;

        @media screen and (max-width: $breakpoint-gallery-small) {
            position: fixed;
            height: $site-header-height;
            width: 100%;
            top: $site-header-height;
            padding: 0;
            background-color: var(--toolbar-background);
            border-bottom: 1px solid var(--border-color);
            overflow-x: scroll;
            z-index: 1;
        }
    }

    .menu ul {
        @media screen and (max-width: $breakpoint-gallery-small) {
            display: inline-flex;
            align-items: center;
            height: 100%;
            margin-bottom: 0 !important;
            padding-left: var(--horizontal-padding) !important;
        }
    }

    .menu li {
        margin-bottom: $size-2 !important;

        @media screen and (max-width: $breakpoint-gallery-small) {
            margin-bottom: 0 !important;
            flex-shrink: 0;

            &:last-child {
                padding-right: $size-8;
            }
        }
    }

    .menu a {
        --text-color: var(--secondary-text-color); // only applies to the icon?
        --icon-size: 1.75em;

        display: flex;
        align-items: center;
        color: var(--secondary-text-color);

        :global(.icon) {
            opacity: 0.75;
            transition: opacity $default-transition-timing, fill $default-transition-timing;
        }

        &:hover {
            --text-color: var(--link-hover-color);

            :global(.icon) {
                opacity: 1;
            }
        }
    }

    .menu .name {
        margin-left: $size-1;
        margin-right: $size-half;
    }

    .menu .enterpriseIcon {
        --icon-size: 15px;
    }

    .menu-scroll-indicator {
        position: sticky;
        width: 100%;
        height: $size-8;
        bottom: 0;
        left: 0;
        background: linear-gradient(transparent, white);
        pointer-events: none;

        @media screen and (max-width: $breakpoint-gallery-small) {
            position: fixed;
            height: $site-header-height;
            top: $site-header-height;
            left: auto;
            right: 0;
            width: $size-8;
            background: linear-gradient(90deg, transparent, var(--toolbar-background));
        }
    }

    .content {
        padding: $site-header-height var(--horizontal-padding) $size-8;

        @media screen and (min-width: $breakpoint-gallery-small) {
            padding: $size-2 var(--horizontal-padding) $size-10;
        }

        @media screen and (min-width: $breakpoint-gallery-large) {
            padding-left: $size-4;
        }
    }

    .chart-type:first-child {
        padding-bottom: $size-4;
        padding-top: $size-2;
    }

    .chart-type:not(:first-child) {
        padding: $size-4 0;
        border-top: 1px solid var(--bright-blue-gray);
    }


    .gallery-list {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        gap: var(--gallery-list-gap);
    }

    .galleryExample {
        --columns: 1;

        width: calc(100% / var(--columns) - var(--gallery-list-gap) / var(--columns) * (var(--columns) - 1));

        @media screen and (min-width: 720px) {
            --columns: 2;
        }

        @media screen and (min-width: 1120px) {
            --columns: 3;
        }

        @media screen and (min-width: 2000px) {
            --columns: 4;
        }

        @media screen and (min-width: 2500px) {
            --columns: 5;
        }
    }
</style>

<style lang="scss" is:global>
    @use '../design-system' as *;

    $site-header-height: 64px;

    .site-header {
        position: fixed !important;
        width: 100%;
        z-index: 2;
    }

    .contentViewport {
        padding-top: $site-header-height;
    }

    .icon {
        transition: fill $default-transition-timing;
    }
</style>
