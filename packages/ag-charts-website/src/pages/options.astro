---
import type { Framework } from '@ag-grid-types';
import { JsObjectPropertiesView } from '@features/api-documentation/components/JsObjectPropertiesView';
import Layout from '@layouts/Layout.astro';
import { getJsonFromDevFile } from '@utils/getJsonFromDevFile';
import { urlWithBaseUrl } from '@utils/pages';
import { getEntry } from 'astro:content';

const interfaceLookup = getJsonFromDevFile('ag-charts-community/interfaces.AUTO.json');
const codeLookup = getJsonFromDevFile('ag-charts-community/doc-interfaces.AUTO.json');

const optionsData = (await getEntry('options-reference', 'data')).data;

const framework = Astro.params.framework as Framework;

const menuItems = [
    {
        name: 'Options API',
        url: '/options',
    },
    {
        name: 'Themes API',
        url: '/theme',
    },
    {
        name: 'API Explorer',
        url: '/explorer',
    },
];

const dummySeries = [
    'All',
    'Bar',
    'Column',
    'Line',
    'Area',
    'Scatter',
    'Bubble',
    'Pie',
    'Donut',
    'Combination',
    'Histogram',
    'Heatmap',
    'Range',
    'Box Plot',
    'Error Bar',
    'Waterfall',
    'Radar',
    'Nightingale',
    'Radial Column',
    'Radial Bar',
    'Treemap',
    'Sunburst',
    'Icicle',
    'Funnel',
    'Pyramid',
    'Bullet',
];

// TODO: Use `AgChartOptions`
const interfaceName = 'AgCartesianChartOptions';
---

<Layout>
    <div class="topBar">
        <div class="topBarInner page-margin">
            <nav>
                <ul class="list-style-none">
                    {
                        menuItems.map(({ name, url }) => {
                            return (
                                <li>
                                    <a href={urlWithBaseUrl(url)}>{name}</a>
                                </li>
                            );
                        })
                    }
                </ul>
            </nav>
            <label
                >Series:
                <select>
                    {
                        dummySeries.map((series) => {
                            return <option>{series}</option>;
                        })
                    };
                </select>
            </label>
        </div>
    </div>
    <div class="container">
        <JsObjectPropertiesView
            client:load
            heading="AgChartOptions"
            interfaceName={interfaceName}
            interfaceLookup={interfaceLookup}
            codeLookup={codeLookup}
            breadcrumbs={['options']}
            framework={framework}
            optionsData={optionsData}
        />
    </div>
</Layout>

<style lang="scss">
    @use '../design-system' as *;

    .container {
        --horizontal-padding: max(calc((100vw - var(--max-page-width)) / 2), var(--horizontal-margin));
        --menu-width: 14rem;
        --gallery-list-gap: #{$size-3};

        display: flex;
        flex-direction: row;
        position: relative;
    }

    .topBar {
        background-color: var(--toolbar-background);
        border-bottom: 1px solid var(--border-color);

        @media screen and (min-width: $breakpoint-docs-nav-medium) {
            position: sticky;
            top: 0;
            z-index: 3;
        }
    }

    .topBarInner {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding-top: $size-1;
        padding-bottom: $size-1;
    }

    nav ul {
        display: flex;
        gap: $size-3;
    }
</style>
