---
import { getEntry } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import { Icon } from '../components/icon/Icon';

const demosData = await getEntry('demo', 'demos');

const { chartTypes = demosData.data.chartTypes } = Astro.props;
---

<Layout>
    <div class="page-margin">
        <div class="menu">
            <ul class="list-style-none">
                {
                    chartTypes.map((chartType) => (
                        <li>
                            <a href={`#${chartType.docsUrl}`}>
                                <Icon client:only name={chartType.icon}/>
                                <span class="name">{chartType.name}</span>
                                {
                                  chartType.enterprise && <span class="enterpriseIcon"><Icon client:only name="enterprise"/></span>
                                }
                            </a>
                        </li>
                    ))
                }
            </ul>
            <div class="menu-scroll-indicator"></div>
        </div>

        <div class="content">
            {
                chartTypes.map((chartType) => (
                    <div class="chart-type">
                        <h2 id={chartType.docsUrl}>
                            <span>{chartType.name} Charts</span>
                            <a class="font-size-medium" href={chartType.docsUrl}>
                                View {chartType.name.toLowerCase()} charts documentation
                            </a>
                        </h2>
                        <div class="demo-list">
                            {chartType.demos.map((demo) => (
                              <a class="demo-item" href={`/demo/${demo.example}`}>
                                    <div class="dummy-image" />      </div>
                                    <p>{demo.name}</p>
                                </a>
                            ))}
                        </div>
                    </div>
                ))
            }
        </div>
    </div>
</Layout>

<script>
  // Add smooth scrolling for menu anchor links 
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
        e.preventDefault();

        document.querySelector(this.getAttribute('href')).scrollIntoView({
            behavior: 'smooth'
        });
    });
});
</script>

<style lang="scss">
    @use '../design-system' as *;

    $site-header-height: 64px;
    $menu-width: 14rem;
    $list-gap: $size-2;

    .page-margin {
        display: flex;
        flex-direction: row;
        position: relative;
    }

    .menu {
        position: sticky;
        width: $menu-width;
        max-height: calc(100vh - #{$site-header-height});
        top: $site-header-height;
        padding-top: calc($size-7 + $size-2);
        overflow-y: scroll;
    }

    .menu ul {
      // margin-bottom: $size-7;
    }

    .menu li {
      margin-bottom: $size-2 !important;
    } 

    .menu a {
      --text-color: var(--link-color);

      display: flex;
      align-items: center;

      &:hover {
        --text-color: var(--link-hover-color);
      }
    }

    .menu .name {
      margin-left: $size-1;
      margin-right: $size-half;
    }

    .enterpriseIcon {
      --text-color: red;
      --icon-size: 18px;
    }

    .menu-scroll-indicator {
        position: sticky;
        width: $menu-width;
        height: $size-8;
        bottom: 0;
        left: 0;
        background: linear-gradient(transparent, white);
    }

    .content {
        flex-grow: 1;
    }

    .chart-type {
        margin-bottom: $size-5;
    }

    .chart-type h2 {
        display: flex;
        flex-direction: row;
        align-items: flex-end;
        justify-content: space-between;
        width: 100%;
        padding-top: $size-5;
    }

    .chart-type h2 a {
        align-self: flex-end;
    }

    .demo-list {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        gap: $list-gap;
    }

    .demo-item {
        width: calc(50% - $list-gap / 2);
    }

    .dummy-image {
        width: 100%;
        aspect-ratio: 16 / 10;
        background-color: #ddd;
        border-radius: var(--border-radius);
    }
</style>

<style lang="scss" is:global>
  @use '../design-system' as *;

  $site-header-height: 64px;

  .site-header {
    position: fixed !important;
    width: 100%;
    z-index: 1;
  }

  .contentViewport {
    padding-top: $site-header-height;
  }

  .menu svg {
    transition: fill $default-transition-timing;
  }
</style>