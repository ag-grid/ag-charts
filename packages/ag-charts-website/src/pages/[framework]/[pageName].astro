---
import { getCollection, getEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import { PagesNavigation } from '@components/pages-navigation/PagesNavigation';
import { Header } from '@features/docs/components/Header';
import { getFrameworkDisplayText } from '@utils/framework';
import type { Framework } from '@ag-grid-types';
import { getDocsPages } from '@features/docs/utils/pageData';
import { SideNavigation } from '@components/pages-navigation/SideNavigation';
import { addTabsToHeadings } from '@utils/addTabsToHeadings';
import { DOCS_TAB_ITEM_ID_PREFIX, FRAMEWORKS } from '@constants';
import {getNewFrameworkPath} from '../../utils/framework';
import {FrameworkSelector} from "../../components/framework-selector/FrameworkSelector";
import {FrameworkSelectorInsideDocs} from "../../components/framework-selector-inside-doc/FrameworkSelectorInsideDocs";

export async function getStaticPaths() {
    const pages = await getCollection('docs');
    return getDocsPages(pages);
}

const { page } = Astro.props;
const currentFramework = Astro.params.framework as Framework;
const pageName = Astro.params.pageName as Framework;
const path = Astro.url.pathname;
const { title, enterprise, hideSideMenu, hidePageMenu } = page.data;

const { Content, headings } = await page.render();
const extendedHeadings = addTabsToHeadings({
    markdocContent: page.body,
    headings,
    getTabItemSlug: ({ id }) => `${DOCS_TAB_ITEM_ID_PREFIX}${id}`,
});

const menuEntry = await getEntry('menu', 'data');

---

<Layout title={`${getFrameworkDisplayText(currentFramework)} Charts: ${title}`} showTopBar={true} showSearchBar={true}>
    <div class="contentViewport">
        {
            !hidePageMenu && (
                <PagesNavigation client:load menuData={menuEntry.data} framework={currentFramework} pageName={pageName} />
            )
        }

        <div
            id="doc-content"
            class:list={[
                'docPage',
                {
                    noSideMenu: hideSideMenu,
                },
            ]}
        >
            {currentFramework && (
                <div class="frameworkSelectorWrapper">
                    <FrameworkSelectorInsideDocs
                        client:only
                        path={path}
                        currentFramework={currentFramework}
                    />
                </div>
            )}

            <Header title={title} framework={currentFramework} isEnterprise={enterprise} />

            {/* Wrapping div is a hack to target "intro" section of docs page */}
            <div class="pageSections">
                <Content framework={currentFramework} page={page} />
            </div>
        </div>

        {!hideSideMenu && <SideNavigation client:load title={title} pageHeadings={extendedHeadings} />}
    </div>
</Layout>

<style lang="scss">
    @use '../../design-system' as *;
    @import '../../styles/docs.module.scss';

    .contentViewport {
        display: flex;
        flex-direction: column;
        flex-grow: 1;

        @media (min-width: $breakpoint-docs-nav-medium) {
            flex-direction: row;
        }
    }
</style>
