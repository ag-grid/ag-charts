@use '../../../design-system/' as *;

// Ignore padding & remove border if within tabbed container
:global(.tabs-outer) .expandableSnippet pre:global(.code) {
    margin: -$spacing-size-4;
    border: none;
}

.expandableSnippet {
    --total-header-height: calc(var(--header-nav-height) * 2 + 4px);

    position: sticky;
    top: var(--total-header-height);
    display: flex;
    flex-direction: column;
    width: 100%;
    height: calc(100vh - var(--total-header-height));
    z-index: 3;

    #{$selector-darkmode} & {
        --total-header-height: calc(var(--header-nav-height) * 2 + 6px);
    }

    @media screen and (min-width: $breakpoint-options-medium) {
        overflow-y: auto;
        z-index: unset;
    }

    > header {
        position: sticky;
        top: 0;
        left: 0;
        z-index: 3;
        width: 100%;
        padding: $spacing-size-4 var(--horizontal-margin);
        background-color: var(--color-bg-primary);
        border-bottom: 1px solid var(--color-util-gray-200);

        @media screen and (min-width: $breakpoint-options-medium) {
            padding: $spacing-size-4;
        }

        h3 {
            margin-bottom: 0;
        }

        p {
            line-height: var(--line-height-tight);
        }
    }

    > pre {
        flex: 1 0 auto;
        margin-bottom: 0;
        border: none;
        border-radius: 0;
        overflow-y: hidden;

        > code {
            --code-line-height: 1.75;

            min-height: 100%;
            padding: 8px 0 105px;
            line-height: var(--code-line-height);
            background-size: 1px calc(1em * var(--code-line-height) * 2);
        }
    }

    input[type='search'] {
        width: 100%;

        &.searchInput {
            padding-left: 2em;
        }
    }
}

.navContainer {
    --nav-options-indent: 24px;

    display: none;
    user-select: none;

    @media screen and (min-width: $breakpoint-options-medium) {
        display: block;
    }
}

.navContainer > code {
    background: var(--color-bg-secondary);

    #{$selector-darkmode} & {
        background: var(--color-gray-900) !important;
    }
}

.navGroup {
    position: relative;

    &.groupWhiskers::before,
    &.groupWhiskers::after {
        content: '';
        position: absolute;
        left: calc(4px + var(--nav-options-indent) * (var(--options-nav-depth, 0) - 1));
        background-color: var(--color-util-gray-300);
        pointer-events: none;

        #{$selector-darkmode} & {
            background-color: var(--color-util-gray-400);
        }
    }

    &.groupWhiskers::before {
        top: -7px;
        bottom: -14px;
        width: 2px;
    }

    &.groupWhiskers::after {
        bottom: -14px;
        height: 2px;
        width: 8px;
    }
}

.navItem {
    padding: 0 16px 0 calc(16px + var(--nav-options-indent) * var(--options-nav-depth, 0));

    &:global(.highlight) {
        --highlight-color: var(--primary-600);
        --highlight-opacity: 0.15;

        position: relative;

        &::before {
            content: '';
            position: absolute;
            inset: 0;
            background-color: var(--highlight-color);
            opacity: var(--highlight-opacity);
            pointer-events: none;
        }

        #{$selector-darkmode} & {
            --highlight-color: var(--property-color);
            --highlight-opacity: 0.16;
        }
    }
}

.propertyExpander {
    --icon-size: 1em;

    position: absolute;
    top: 0;
    right: 100%;
    padding: 3px;
    box-sizing: content-box;
    transition: transform $transition-default-timing;

    &.active {
        transform: rotate(90deg);
    }
}

.propertyName {
    position: relative;
    color: var(--property-color);
    cursor: pointer;

    .punctuation {
        color: var(--punctuation-color);
    }

    .unionDiscriminator {
        color: var(--color-fg-code);
    }
}

.propertyWhisker {
    position: relative;

    &::before {
        content: '';
        position: absolute;
        top: 8.5px;
        right: calc(100% + 10px);
        width: var(--nav-options-indent);
        height: 2px;
        background-color: var(--color-util-gray-300);

        #{$selector-darkmode} & {
            background-color: var(--color-util-gray-400);
        }
    }
}

.propertyExpandable {
    &.propertyWhisker::before {
        right: calc(100% + 22px);
        width: calc(var(--nav-options-indent) - 12px);
    }
}

.searchOuter {
    position: relative;
    display: flex;
    align-items: center;

    input::-webkit-search-cancel-button {
        display: none;
    }
}

.searchIcon {
    --icon-size: 1.25em;
    --text-color: var(--color-fg-secondary);

    position: absolute;
    left: 0.625em;
}

.searchDropdown {
    position: absolute;
    inset: 100% 0 auto;
    max-height: 168px;
    border-bottom-right-radius: var(--radius-sm);
    border-bottom-left-radius: var(--radius-sm);
    background-color: var(--color-bg-primary);
    border: 1px solid var(--color-input-border);
    border-top: none;
    overflow: auto;
    z-index: 3;

    #{$selector-darkmode} & {
        inset: 100% 0 auto;
    }
}

.searchOptions {
    display: flex;
    flex-direction: column;
    min-width: fit-content;
    white-space: nowrap;
}

.searchOption {
    padding: $spacing-size-2 $spacing-size-4;
    cursor: pointer;

    strong {
        color: var(--dark-blue-600);

        #{$selector-darkmode} & {
            color: var(--primary-500);
        }
    }

    &.selected {
        background-color: var(--background-600);

        #{$selector-darkmode} & {
            background-color: var(--background-400);
        }
    }
}
