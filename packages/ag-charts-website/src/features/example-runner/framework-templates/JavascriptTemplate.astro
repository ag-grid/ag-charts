---
interface Props {
    isDev: boolean;
    title: string;

    modifiedTimeMs: number;
    isEnterprise: boolean;
    layout: 'grid' | 'toolbar' | 'none';
    hasLocale: boolean;

    /**
     * All script file names
     */
    scriptFiles?: string[];
    styleFiles?: string[];
    indexFragment: string;
    headFragment?: string;
    appLocation: string;
    extraStyles?: string;
    children?: any;
    isExternal?: boolean;
}

const {
    isDev,
    title,
    modifiedTimeMs,
    isEnterprise,
    hasLocale,
    layout,
    styleFiles,
    scriptFiles,
    indexFragment,
    appLocation,
    extraStyles,
    headFragment,
    isExternal,
} = Astro.props as Props;

import { MetaData } from './lib/MetaData';
import { Styles } from './lib/Styles';
import { Scripts } from './lib/Scripts';
import { SITE_BASE_URL } from '@constants';
import { pathJoin } from '@utils/pathJoin';
import {
    getCacheBustingUrl,
    getChartEnterpriseScriptPath,
    getChartLocaleScriptPath,
    getChartScriptPath,
} from '@utils/chartLibraryPaths';

import exampleControlsStyle from '@ag-website-shared/components/example-runner/example-controls.css?raw';

const siteUrl = Astro.site ? pathJoin(Astro.site, SITE_BASE_URL) : '/';

const chartScriptPath = getCacheBustingUrl(getChartScriptPath(siteUrl), modifiedTimeMs);
const chartScriptEnterprisePath = getCacheBustingUrl(getChartEnterpriseScriptPath(siteUrl), modifiedTimeMs);
const chartScriptLocalePath = getCacheBustingUrl(getChartLocaleScriptPath(siteUrl), modifiedTimeMs);
---

<html lang="en">
    <head>
        <MetaData isDev={isDev} title={`JavaScript Example - ${title}`} modifiedTimeMs={modifiedTimeMs} />
        <Styles
            baseUrl={appLocation}
            files={isDev && styleFiles
                ? styleFiles
                      .filter((file: string) => !file.includes('style.css') && !file.includes('styles.css'))
                      .map((file: string) => getCacheBustingUrl(file, modifiedTimeMs))
                : []}
        />
        <Fragment set:html={headFragment} />

        {!isExternal && <style set:html={exampleControlsStyle} />}
    </head>
    <body>
        <Fragment set:html={indexFragment} />
        <script src={isEnterprise ? chartScriptEnterprisePath : chartScriptPath}></script>
        {hasLocale && <script src={chartScriptLocalePath} />}
        <Scripts baseUrl={appLocation} files={scriptFiles} />

        <Styles
            baseUrl={appLocation}
            files={styleFiles
                ? styleFiles.filter((file: string) => file.includes('style.css') || file.includes('styles.css'))
                : []}
        />
        <slot />
    </body>
</html>
