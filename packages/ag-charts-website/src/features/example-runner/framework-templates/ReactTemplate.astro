---
import { MetaData } from './lib/MetaData';
import { ExampleStyle } from './lib/ExampleStyle';
import { Styles } from './lib/Styles';
import { SystemJs } from './lib/SystemJs';
import { Scripts } from './lib/Scripts';
import { pathJoin } from '@utils/pathJoin';
import type { Library } from '@ag-grid-types';

interface Props {
    isDev: boolean;
    pageName: string;
    exampleName: string;

    modifiedTimeMs: number;
    isExecuting: boolean;
    isEnterprise: boolean;
    entryFileName: string;
    /**
     * Extra script file names (not including entry file)
     */
    scriptFiles?: string[];
    styleFiles?: string[];
    appLocation: string;
    library: Library;
    boilerplatePath: string;
}

const {
    pageName,
    exampleName,
    isDev,
    modifiedTimeMs,
    isExecuting,
    isEnterprise,
    appLocation,
    entryFileName,
    scriptFiles = [],
    styleFiles = [],
    library,
    boilerplatePath,
} = Astro.props as Props;

const startFile = pathJoin(appLocation, entryFileName);
---

<html lang="en">
    <head>
        <MetaData
            isDev={isDev}
            title={`React example - ${pageName} - ${exampleName}`}
            modifiedTimeMs={modifiedTimeMs}
            isExecuting={isExecuting}
        />
        <ExampleStyle rootId="root" />
        <Styles baseUrl={appLocation} files={styleFiles} />
    </head>
    <body>
        <div id="root"></div>
        {scriptFiles && <Scripts baseUrl={appLocation} files={scriptFiles} />}
        <SystemJs
            isDev={isDev}
            library={library}
            boilerplatePath={boilerplatePath}
            appLocation={appLocation}
            startFile={startFile}
            internalFramework={'react'}
            isEnterprise={isEnterprise}
        />
    </body>
</html>
