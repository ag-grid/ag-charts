---
import type { Library } from '@ag-grid-types';
import { MetaData } from './lib/MetaData';
import { Scripts } from './lib/Scripts';
import { Styles } from './lib/Styles';
import { SystemJs } from './lib/SystemJs';
import { pathJoin } from '@utils/pathJoin';

import exampleControlsStyle from '@ag-website-shared/components/example-runner/example-controls.css?raw';

interface Props {
    isDev: boolean;
    title: string;

    modifiedTimeMs: number;
    entryFileName: string;

    layout: 'grid' | 'toolbar' | 'none';

    /**
     * Extra script file names (not including entry file)
     */
    scriptFiles?: string[];
    styleFiles?: string[];
    appLocation: string;
    boilerplatePath: string;
    extraStyles?: string;
    children?: any;
    headFragment?: string;
    isExternal?: boolean;
}

const {
    isDev,
    title,
    modifiedTimeMs,
    boilerplatePath,
    appLocation,
    entryFileName,
    layout,
    scriptFiles = [],
    styleFiles = [],
    extraStyles,
    headFragment,
    isExternal,
} = Astro.props as Props;

const startFile = pathJoin(appLocation, entryFileName);
---

<html lang="en">
    <head>
        <MetaData isDev={isDev} title={`Vue 3 Example - ${title}`} modifiedTimeMs={modifiedTimeMs} />
        <Styles baseUrl={appLocation} files={styleFiles} />
        <Fragment set:html={headFragment} />

        {!isExternal && <style set:html={exampleControlsStyle} />}
    </head>
    <body>
        <div id="app"><my-component></my-component></div>

        <Scripts baseUrl={appLocation} files={scriptFiles} />
        <SystemJs
            isDev={isDev}
            boilerplatePath={boilerplatePath}
            appLocation={appLocation}
            startFile={startFile}
            internalFramework="vue3"
        />
        <slot />
    </body>
</html>
