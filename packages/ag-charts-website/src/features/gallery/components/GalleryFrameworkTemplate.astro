---
import { getEntry } from 'astro:content';
import { getGeneratedGalleryContents } from '../utils/examplesGenerator';
import { getExampleUrl } from '../utils/urlPaths';
import FrameworkTemplate from '../../example-runner/components/FrameworkTemplate.astro';
import { GALLERY_INTERNAL_FRAMEWORK } from '../constants';
import { getChartTypeName, getExampleName } from '../utils/filesData';
import type { GeneratedContents } from '../../examples-generator/types';

interface Props {
    exampleName: string;
    /**
     * Whether to use relative paths for script files references
     */
    relativePath?: boolean;
    /**
     * Override to be used for generated contents
     */
    generatedContents?: GeneratedContents;
}

const { exampleName, relativePath, generatedContents: generatedContentsOverride } = Astro.props as Props;

const internalFramework = GALLERY_INTERNAL_FRAMEWORK;
const generatedContents = generatedContentsOverride
    ? generatedContentsOverride
    : await getGeneratedGalleryContents({
          exampleName,
      });

const exampleUrl = getExampleUrl({
    exampleName,
});

const galleryDataEntry = await getEntry('gallery', 'data');
const chartTypeName = getChartTypeName({
    galleryData: galleryDataEntry.data,
    exampleName,
});
const pageName = `${chartTypeName} Chart`;
const displayExampleName = getExampleName({
    galleryData: galleryDataEntry.data,
    exampleName,
});
---

<FrameworkTemplate
    internalFramework={internalFramework}
    pageName={pageName!}
    exampleName={displayExampleName!}
    exampleUrl={exampleUrl}
    generatedContents={generatedContents!}
    relativePath={relativePath}
/>
