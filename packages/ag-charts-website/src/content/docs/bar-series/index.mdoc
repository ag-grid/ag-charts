---
title: 'Bar Series'
---

A Bar Series visualises numerical data with proportional bars that can be grouped or stacked, and displayed in either
vertical or horizontal layouts.

## Simple Bar

By default, bar are grouped, enabling side-by-side comparison of data against the same category.

{% chartExampleRunner title="Simple Bar" name="simple-bar" type="generated" /%}

To create a Bar Series, use the `bar` series type.

```js
series: [
    { type: 'bar', xKey: 'quarter', yKey: 'iphone', yName: 'iPhone' },
    { type: 'bar', xKey: 'quarter', yKey: 'mac', yName: 'Mac' },
    { type: 'bar', xKey: 'quarter', yKey: 'ipad', yName: 'iPad' },
    { type: 'bar', xKey: 'quarter', yKey: 'wearables', yName: 'Wearables' },
    { type: 'bar', xKey: 'quarter', yKey: 'services', yName: 'Services' },
];
```

In this configuration:

-   `xKey` defines the categories, and is mapped to the [Category Axis](./axes-types/#category).
-   `yKey` provides the numerical values, corresponding to the [Number Axis](./axes-types/#number).
-   `yName` configures display names, reflected in [Tooltip Titles](./tooltips) and [Legend Items](./legend).

## Horizontal Bar

{% chartExampleRunner title="Horizontal Bars" name="horizontal-bar" type="generated" options="{ \"enterprise\": true }" /%}

To show a Horizontal Bar Series, set `direction: 'horizontal'`.

```js
series: [
    { type: 'bar', direction: 'horizontal', xKey: 'quarter', yKey: 'iphone', yName: 'iPhone' },
    ...
],
```

When the `direction` is `'horizontal'` the `xKey` will define categories on the y-axis, while the `yKey` will represent numerical
values along the x-axis.

## Stacked Bar

Stacked bars are useful for visualising data in a cumulative manner across different categories.

{% chartExampleRunner title="Stacked Bars" name="stacked-bars" type="generated" /%}

To stack bars enable the `stacked` series option.

```js
series: [
    { type: 'bar', xKey: 'quarter', yKey: 'iphone', stacked: true },
    ...
];
```

## Normalised Bar

{% chartExampleRunner title="Normalised Bar Series" name="normalised-bar" type="generated" /%}

The `normalizedTo` series option allows normalising bar totals to any non-zero value.

```js
series: [
    { type: 'bar', xKey: 'quarter', yKey: 'iphone', stacked: true, normalizedTo: 100 },
    ...
],
```

## Grouped Stacks

{% chartExampleRunner title="Grouped Stack Series" name="grouped-stack" type="generated" /%}

The `stackGroup` property allows for stacking bars in distinct sets by specifying which series are grouped together.
Series with an unspecified `stackGroup` will be stacked together by default.

```js
series: [
    { type: 'bar', xKey: 'quarter', yKey: 'iphone', stackGroup: 'Devices' },
    { type: 'bar', xKey: 'quarter', yKey: 'mac', stackGroup: 'Devices' },
    { type: 'bar', xKey: 'quarter', yKey: 'ipad', stackGroup: 'Devices' },
    { type: 'bar', xKey: 'quarter', yKey: 'wearables' },
    { type: 'bar', xKey: 'quarter', yKey: 'services' },
];
```

A matching `legendItemName` provided enables the creation of multiple bar series with synchronised legend items. When a
legend item is clicked, all items possessing a matching `legendItemName` will be toggled collectively.

{% chartExampleRunner title="Grouped Stacks with a Shared Legend" name="grouped-stack-shared-legend" type="generated" /%}

## API Reference

{% interfaceDocumentation interfaceName="AgBarSeriesOptions" config="{ \"showSnippets\": false }" /%}
