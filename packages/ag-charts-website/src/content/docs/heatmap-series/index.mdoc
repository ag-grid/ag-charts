---
title: 'Heatmap Series'
enterprise: true
---

A Heatmap Series is using the colour-coding to represent numeric values in a form of a colourful matrix.

## Simple Heatmap

To plot a basic `heatmap` we need an array of data, where every item will have 2 category values and a single numeric value.

```js
series: [
    {
        type: 'heatmap',
        xKey: 'month',
        yKey: 'year',
        colorKey: 'temperature',
    },
],
```

In this configuration:

-   `xKey` is set to 'month', which is the category for the X Axis.
-   `yKey` is set to 'year', which is the category for the Y Axis.
-   `colorKey` supplies numerical values for the Colour Scale (set to 'temperature' in this example).

The corresponding sample data looks like:

```js
data: [
    { year: '2010', month: 'January', temperature: 1.2 },
    { year: '2010', month: 'February', temperature: 1.9 },
],
```

The following example shows a simple Heatmap Series using default options.

{% chartExampleRunner title="Simple Heatmap" name="simple-heatmap" type="generated" options="{ \"enterprise\": true }" /%}

## Customisation

### Colour Range

Series items colours can be customised via the `colorRange` configuration array.

```js
series: [
    {
        type: 'heatmap',
        xKey: 'month',
        yKey: 'year',
        colorKey: 'temperature',
        colorRange: [
            '#4A90E2',
            '#FF6B6B',
        ],
    },
],
```

The example below demonstrates Colour Range customisations.

{% chartExampleRunner title="Customising Colour Range" name="customising-color-range" type="generated" options="{ \"enterprise\": true }" /%}

Colour Range can also have more than 2 values.

```js
series: [
    {
        type: 'heatmap',
        xKey: 'month',
        yKey: 'year',
        colorKey: 'temperature',
        colorRange: [
            '#4A90E2',
            '#FF6B6B',
            '#00FF6B',
            '#00FFFF',
        ],
    },
],
```

{% chartExampleRunner title="Colour Range With Many Values" name="color-range-with-many-values" type="generated" options="{ \"enterprise\": true }" /%}

## Labels

There are multiple ways to display labels for the Heatmap items:

-   `labelKey` can be used to supply numerical values for the labels.

```js
labelKey: 'temperature',
```

-   If `label.enabled` is set to `true` and `labelKey` is not specified, the labels will show a value from `colorKey`.

```js
label: {
    enabled: true,
},
```

A label formatter can be used to customise the labels.

```js
labelKey: 'temperature',
label: {
    enabled: true,
    formatter: ({ value }) => {
        return `${value.toFixed(0)}Â°C`;
    },
},
```

This configuration generates labels as shown in the example below.

{% chartExampleRunner title="Heatmap Label" name="customising-labels" type="generated" options="{ \"enterprise\": true }" /%}

## Gradient Legend

The Gradient Legend helps for better understanding of colour coding of the Heatmap Series. In order to add a Gradient Legend, `gradientLegend.enabled = true` should be added to the root of the chart options.

```js
series: [
    {
        type: 'heatmap',
        xKey: 'month',
        yKey: 'year',
        colorKey: 'temperature',
    },
],
gradientLegend: {
    enabled: true,
},
```

{% chartExampleRunner title="Gradient Legend" name="gradient-legend" type="generated" options="{ \"enterprise\": true }" /%}

### Position

By default the Gradient Legend is placed at the bottom of the chart. But it can be positioned to the side using the `position` config:

```js
gradientLegend: {
    enabled: true,
    position: 'right',
},
```

{% chartExampleRunner title="Gradient Legend Position" name="gradient-legend-position" type="generated" options="{ \"enterprise\": true }" /%}

### Controlling The Size of The Legend

There are a few options to control the size of the bar on the Gradient Legend.

```js
gradientLegend: {
    enabled: true,
    gradient: {
        thickness: 50,
        preferredLength: 400,
    },
},
```

-   `thickness` controls the thickness (or width) of the gradient bar.
-   `preferredLength` sets the initial length of the bar. It is called _preferred_, because if the Legend or it's labels appear outside of the chart, the bar will shrink.

{% chartExampleRunner title="Gradient Legend Size" name="gradient-legend-size" type="generated" options="{ \"enterprise\": true }" /%}

### Labels

There are a number of configs that affect font, colour and padding of the labels.

```js
gradientLegend: {
    enabled: true,
    stop: {
        label: {
            fontSize: 20,
            fontStyle: 'italic',
            fontWeight: 'bold',
            fontFamily: 'serif',
            color: 'red',
        },
        padding: 20,
    },
},
```

{% chartExampleRunner title="Gradient Legend Labels" name="gradient-legend-labels" type="generated" options="{ \"enterprise\": true }" /%}

## API Reference

{% interfaceDocumentation interfaceName="AgHeatmapSeriesOptions" config="{ \"showSnippets\": false }" /%}

{% interfaceDocumentation interfaceName="AgGradientLegendOptions" config="{ \"showSnippets\": false }" /%}
