---
title: 'Quick Start'
---

Create a chart with AG Charts in 60 seconds.

{% if isNotJavascriptFramework() %}

## Install

Install the AG Charts library:

{% tabs %}

{% tabItem id="js-npm" label="NPM" %}

<!-- REACT NPM Installation -->

{% if isFramework("react") %}

```bash
npm install ag-charts-react
```

{% /if %}

<!-- ANGULAR NPM Installation -->

{% if isFramework("angular") %}

```bash
npm install ag-charts-angular
```

{% /if %}

<!-- VUE NPM Installation -->

{% if isFramework("vue") %}

```bash
npm install ag-charts-vue3
```

{% /if %}

{% /tabItem %}

{% tabItem id="js-yarn" label="Yarn" %}

<!-- REACT Yarn Installation -->

{% if isFramework("react") %}

```bash
yarn add ag-charts-react
```

{% /if %}

<!-- ANGULAR NPM Installation -->

{% if isFramework("angular") %}

```bash
yarn add ag-charts-angular
```

{% /if %}

<!-- VUE NPM Installation -->

{% if isFramework("vue") %}

```bash
yarn add ag-charts-vue3
```

{% /if %}

{% /tabItem %}

{% /tabs %}

{% /if %}

## Create

{% if isFramework("javascript") %}

Create a new `index.html` file with the following code:

```html
<!doctype html>
<html lang="en">
    <head>
        <title>AG Charts Quick Start</title>
        <!-- Charts Core Library -->
        <script src="https://cdn.jsdelivr.net/npm/ag-charts-community/dist/umd/ag-charts-community.js"></script>
    </head>
    <body>
        <!-- Container for Chart -->
        <div id="myChart"></div>
        <!-- Charts configuration file -->
        <script src="index.js"></script>
    </body>
</html>
```

Create a new `index.js` file, in the same directory, with the following code:

```js
// Chart Options
const options = {
    // Container: HTML Element to hold the chart
    container: document.getElementById('myChart'),
    // Data: Data to be displayed in the chart
    data: [
        { month: 'Jan', avgTemp: 2.3, iceCreamSales: 162000 },
        { month: 'Mar', avgTemp: 6.3, iceCreamSales: 302000 },
        { month: 'May', avgTemp: 16.2, iceCreamSales: 800000 },
        { month: 'Jul', avgTemp: 22.8, iceCreamSales: 1254000 },
        { month: 'Sep', avgTemp: 14.5, iceCreamSales: 950000 },
        { month: 'Nov', avgTemp: 8.9, iceCreamSales: 200000 },
    ],
    // Series: Defines which chart type and data to use
    series: [{ type: 'bar', xKey: 'month', yKey: 'iceCreamSales' }],
};

// Create Chart
const chart = agCharts.AgCharts.create(options);
```

{% /if %}

<!-- REACT Create -->

{% if isFramework("react") %}

Replace your `index.js` file (or root component) with the following code:

```jsx
import React, { useState } from 'react';
import ReactDOM from 'react-dom/client';
import { AgChartsReact } from 'ag-charts-react';

// Chart Component
const ChartExample = () => {
  // Chart Options: Control & configure the chart
  const [chartOptions, setChartOptions] = useState({
    // Data: Data to be displayed in the chart
    data: [
        { month: 'Jan', avgTemp: 2.3, iceCreamSales: 162000 },
        { month: 'Mar', avgTemp: 6.3, iceCreamSales: 302000 },
        { month: 'May', avgTemp: 16.2, iceCreamSales: 800000 },
        { month: 'Jul', avgTemp: 22.8, iceCreamSales: 1254000 },
        { month: 'Sep', avgTemp: 14.5, iceCreamSales: 950000 },
        { month: 'Nov', avgTemp: 8.9, iceCreamSales: 200000 },
    ],
    // Series: Defines which chart type and data to use
    series: [{ type: 'bar', xKey: 'month', yKey: 'iceCreamSales' }],
  });

  return (
    // AgCharsReact component with options passed as prop
    <AgChartsReact options={chartOptions} />
  );
}

// Render component inside root element
const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(<ChartExample />);
```

{% /if %}

<!-- ANGULAR Create -->

{% if isFramework("angular") %}

Replace your `app.component.ts` file (or root component) with the following:

```js
import { Component } from '@angular/core';
import { AgChartsAngular } from 'ag-charts-angular';
import { AgChartOptions } from 'ag-charts-community';

@Component({
  selector: 'app-root',
  standalone: true,
  imports: [AgChartsAngular],
  // ag-charts-angular component with chartOptions attribute
  template:
  `<ag-charts-angular
    style="height: 100%"
    [options]="chartOptions">
   </ag-charts-angular>`,
})
export class AppComponent {
  // Chart Options
  public chartOptions: AgChartOptions;
  constructor() {
    this.chartOptions = {
      // Data: Data to be displayed in the chart
      data: [
        { month: 'Jan', avgTemp: 2.3, iceCreamSales: 162000 },
        { month: 'Mar', avgTemp: 6.3, iceCreamSales: 302000 },
        { month: 'May', avgTemp: 16.2, iceCreamSales: 800000 },
        { month: 'Jul', avgTemp: 22.8, iceCreamSales: 1254000 },
        { month: 'Sep', avgTemp: 14.5, iceCreamSales: 950000 },
        { month: 'Nov', avgTemp: 8.9, iceCreamSales: 200000 },
      ],
      // Series: Defines which chart type and data to use
      series: [{ type: 'bar', xKey: 'month', yKey: 'iceCreamSales' }]
    };
  }
}
```

{% /if %}

<!-- VUE Create -->

{% if isFramework("vue") %}

Replace your `app.vue` (or root component) with the following code:

```html
<template>
    <!-- The AG Charts component with chartsOptions as an attribute -->
    <ag-charts-vue :options="options"> </ag-charts-vue>
</template>

<script>
    import { ref } from 'vue';

    import { AgChartsVue } from 'ag-charts-vue3';

    // Core Charts Logic
    export default {
        name: 'App',
        components: {
            AgChartsVue,
        },
        setup() {
            // Chart Options
            const options = ref({
                // Data: Data to be displayed in the chart
                data: [
                    { month: 'Jan', avgTemp: 2.3, iceCreamSales: 162000 },
                    { month: 'Mar', avgTemp: 6.3, iceCreamSales: 302000 },
                    { month: 'May', avgTemp: 16.2, iceCreamSales: 800000 },
                    { month: 'Jul', avgTemp: 22.8, iceCreamSales: 1254000 },
                    { month: 'Sep', avgTemp: 14.5, iceCreamSales: 950000 },
                    { month: 'Nov', avgTemp: 8.9, iceCreamSales: 200000 },
                ],
                // Series: Defines which chart type and data to use
                series: [{ type: 'bar', xKey: 'month', yKey: 'iceCreamSales' }],
            });
            return {
                options,
            };
        },
    };
</script>
```

{% /if %}

## Example

When you run your app, you should see a basic chart:

{% chartExampleRunner title="Basic Chart Example" name="basic-example" type="generated" /%}

## Next Steps

-   [Creating a Basic Chart](./create-a-basic-chart/)
