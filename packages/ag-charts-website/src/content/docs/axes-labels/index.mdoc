---
title: 'Axis Labels'
---

Axis labels provide clear identification and context for the data represented on each axis in a chart.

## Collision Avoidance

AG Charts has a number of methods to avoid axis label collisions.

{% chartExampleRunner title="Axis Label Rotation & Skipping" name="axis-label-rotation" type="generated" /%}

In this example:

-   Use the grab handle in the bottom right of the example to resize the chart. Observe how the labels behave with the different options applied.
-   The first row of buttons demonstrate all the [rotation](#rotation) options.
-   The second row of buttons allows changing the length of the labels. This more easily shows the [skipping](#skipping) behaviour.
-   The third row of buttons allows disabling the collision avoidance altogether.

Collision avoidance is enabled by default, to disable set `label.avoidCollisions` to false.

```js
{
    label: {
        avoidCollisions: false,
    }
}
```

### Rotation

Rotating axis labels allows fitting more labels into a smaller area, at the expense of readability.

Three rotation options are available:

-   No rotation.
-   Fixed rotation - labels are always rotated by the amount specified in the `rotation` property.
-   Automatic rotation - labels are rotated if any label will be wider than the gap between ticks.

Automatic rotation can be enabled or disabled using the `autoRotate` property.
It is also possible to specify a rotation angle for the automatic rotation via the `autoRotateAngle` property.

Category axes have `autoRotate` enabled by default with a default `autoRotateAngle` of `335`.

### Skipping

Label skipping is performed automatically when there is a high likelihood of collisions between labels. Labels that would collide are not displayed.

A collision is defined as labels coming within 10 pixels of each other. This minimum gap allowed between the axis labels before skipping can be configured using the `label.minSpacing` property.

```js
{
    label: {
        minSpacing: 20,
    }
}
```

If `autoRotate` is enabled, rotation will be attempted before label skipping applies.

## Label Text Formatting

The label text is taken directly from the data. There are two ways to format this text, for example to show units next to values or to display number values to a certain precision.

### Formatter

The `label.formatter` callback allows maximum flexibility for controlling what appears in the labels.

{% chartExampleRunner title="Axis Label Formatter" name="axis-label-formatter" type="generated" /%}

```js
{
    label: {
        formatter: function(params) {
            return (params.value * 100) + '%';
        }
    }
}
```

In the above example:

-   The number axis uses a formatter to multiply by 100 and append `'%'` to all values.
-   The category axis uses a formatter to add `'=='` around the 'Windows' label only.

The formatter function receives a single `params` object which contains:

-   The raw `value` of the label (without any default formatting applied).
-   The `index` of the label in the data array.
-   The number of `fractionDigits`, if the value is a number.

It is called for each label and should return a string.

### Format

The `label.format` property takes a static string representing a time or number format. This has less flexibility than the formatter, but can be serialised.

{% chartExampleRunner title="Label Format" name="axis-label-format" type="generated" /%}

```js
{
    label: {
        format: "%b %Y",
    }
}
```

In the above example:

-   The time axis uses a format to display the short month name and full year for all values.
-   The number axis uses a format to prepend a `'$'` and use 2 decimal places for all values. Shorter numbers are padding with `'0'`.

The syntax used in the format strings depends on the axis type.

-   For `time` axes use [Python's strftime specification](https://strftime.org/).
-   For `number` and `log` axes use [Python's format specification](https://docs.python.org/3/library/string.html#format-specification-mini-language/).

{%note%}
Label `formatter` and `format` properties only affect the label text.
See the [Axis Ticks](./axes-ticks/) section to learn how to configure which labels are shown.
{%/note%}

## Next Up

Continue to the next section to learn about [Grid Lines](./axes-grid-lines/).
