---
title: 'Radial Column Series'
enterprise: true
---

The **Radial Column** series, also known as the _Circular Column chart_, displays data using rectangular columns that
are positioned along a polar axis. This chart type is similar to the [Nightingale Chart](../nightingale-series/).

## Simple Radial Column

To create a basic Radial Column chart, use a data array where each item has one category value (for the angle axis) and one numeric value (for the radius axis).

A minimal Radial Column series configuration will look like:

```js
series: [
    {
        type: 'radial-column',
        angleKey: 'product',
        radiusKey: 'sales',
    },
],
```

{% chartExampleRunner title="Simple Radial Column" name="simple-radial-column" type="generated" options="{ \"enterprise\": true }" /%}

## Stacked Radial Column

In a stacked Radial Column chart, columns are placed on top of each other to create a total for each category. The following example illustrates a stacked Radial Column chart:

```js
series: [
    {
        type: 'radial-column',
        angleKey: 'product',
        radiusKey: 'A sales',
        stacked: true,
    },
    {
        type: 'radial-column',
        angleKey: 'product',
        radiusKey: 'B sales',
        stacked: true,
    },
],
```

{% chartExampleRunner title="Stacked Radial Column" name="stacked-radial-column" type="generated" options="{ \"enterprise\": true }" /%}

## Customisation

### Inner Radius

To create a hole in the middle, use the `innerRadiusRatio` option in the polar `radius` axis:

```js
axes: [
    {
        type: 'angle-category',
    },
    {
        type: 'radius-number',
        innerRadiusRatio: 0.25,
    },
],
```

{% chartExampleRunner title="Inner Radius" name="inner-radius" type="generated" options="{ \"enterprise\": true }" /%}

### Category Padding

It's possible to set a padding between elements in a polar chart's `angle` axis by using two options:

-   `paddingInner` controls the padding between column groups.
-   `groupPaddingInner` controls the padding between columns within a group.

```js
axes: [
        {
            type: 'angle-category',
            groupPaddingInner: 0.5,
            paddingInner: 0.4,
        },
        {
            type: 'radius-number',
            innerRadiusRatio: 0.25,
        },
],
```

Note that the [Inner Radius](#inner-radius) has also been changed via `innerRadiusRatio`.

{% chartExampleRunner title="Category Padding" name="category-padding" type="generated" options="{ \"enterprise\": true }" /%}

### Axis Label Orientation

Use `label.orientation` property to change the orientation of polar axis labels by providing one of the options: `fixed`, `parallel` or `perpendicular`. The next example demonstrates how this property works:

```js
axes: [
    {
        type: 'angle-category',
        label: {
            orientation: 'perpendicular',
        },
    },
    {
        type: 'radius-number',
    },
],
```

{% chartExampleRunner title="Axis Label Orientation" name="axis-label-orientation" type="generated" options="{ \"enterprise\": true }" /%}

### Radius Axis Position

`positionAngle` can change the position of Radius Axis line and `label.rotation` will change the rotation angle of axis labels:

```js
axes: [
    {
        type: 'angle-category',
    },
    {
        type: 'radius-number',
        positionAngle: 90,
        label: {
            rotation: -90,
        },
    },
],
```

{% chartExampleRunner title="Radius Axis Position" name="radius-axis-position" type="generated" options="{ \"enterprise\": true }" /%}

## API Reference

{% interfaceDocumentation interfaceName="AgRadialColumnSeriesOptions" config="{ \"showSnippets\": false }" /%}

{% interfaceDocumentation interfaceName="AgAngleCategoryAxisOptions" config="{ \"showSnippets\": false }" /%}

{% interfaceDocumentation interfaceName="AgAngleCategoryAxisLabelOptions" config="{ \"showSnippets\": false }" /%}

{% interfaceDocumentation interfaceName="AgRadiusNumberAxisOptions" config="{ \"showSnippets\": false }" /%}
