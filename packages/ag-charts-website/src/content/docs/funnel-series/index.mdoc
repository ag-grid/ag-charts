---
title: 'Funnel Series'
description: '$framework Funnel Series shows the change of a value over a set of processes.'
---

A Funnel Series illustrates how a value changes during a process, with bar widths representing the value at each stage
and drop-offs denoting the change between them.

## Simple Funnel

{% chartExampleRunner title="Funnel Chart" name="simple-funnel" type="generated" /%}

To create a Funnel Series, use the `funnel` series type.

```js
series: [
    {
        type: 'funnel',
        stageKey: 'group',
        valueKey: 'value'
    },
],
```

In this configuration:

-   `stageKey` defines the stages which are used for the bars of the funnel.
-   `valueKey` provides the numerical values which determine the width of each bar.

## Horizontal Funnel

{% chartExampleRunner title="Horizontal Funnel Chart" name="horizontal-funnel" type="generated" /%}

To create a horizontal Funnel Series, set the `direction` to `horizontal`.

```js
{
    direction: 'horizontal',
}
```

## Segmented Funnel

A segmented funnel does not draw the drop offs between the stages.

{% chartExampleRunner title="Segmented Funnel Chart" name="segmented" type="generated" /%}

To disable the drop offs, set `enabled` to `false` in the `dropOff` configuration.

```js
{
    dropOff: {
        enabled: false,
    },
}
```

## Customisation

{% chartExampleRunner title="Funnel Fills" name="funnel-fills" type="generated" /%}

```js
{
    fills: ["#5090DC", "#FFA03A", "#459D55", "#34BFE1"],
}
```

In this configuration:

-   The fills for each stage are defined in the `fills` array.
-   The drop offs use an opacity of the same fills. This can be changed in [the drop off options](#reference-AgFunnelSeriesOptions-dropOff).
-   The Funnel Series is reversed by providing the data items in the reverse order.

## API Reference

{% tabs %}

{% tabItem id="AgFunnelSeriesOptions" label="Funnel Series" %}
{% apiReference id="AgFunnelSeriesOptions" /%}
{% /tabItem %}

{% /tabs %}
