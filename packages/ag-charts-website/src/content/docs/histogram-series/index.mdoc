---
title: 'Histogram Series'
enterprise: true
---

A Histogram Series shows the frequency distribution of data values, providing a visual representation of the distribution and spread of the data.

## Simple Histogram

{% chartExampleRunner title="Simple Histogram" name="simple" type="generated" /%}

To create a Histogram Series, use the `histogram` series type and provide an `xKey`.

```js
series: [
    {
        type: 'histogram',
        xKey: 'age',
        xName: 'Participant Age',
    },
],
```

In this configuration:

-   `xKey` defines the data values to be distributed into bins.
-   By default the histogram will split the data into around ten identically sized bins, although the exact number will vary to show round values for the bin boundaries.
-   `xName` configures display names, reflected in the [Tooltip Titles](./tooltips/).

## Bin Customisation

### Bin Count

{% chartExampleRunner title="Larger Bin Count" name="larger-bin-count" type="generated" /%}

The approximate number of bins to aim for can be overridden by setting the `binCount` property.

```js
series: [{
    type: 'histogram'
    xKey: 'age',
    binCount: 20,
}]
```

### Irregular Intervals

{% chartExampleRunner title="Irregular Intervals" name="irregular-intervals" type="generated" /%}

Rather than specifying the number of bins, it is possible to explicitly give the start and end values for each bin.

```js
series: [{
    type: 'histogram'
    xKey: 'age',
    areaPlot: true,
    bins: [[16, 18], [18, 21], [21, 25], [25, 40]],
}]
```

This is done using the `bins` property, and the value should be an array of arrays where each inner array contains the start and end value of a bin.

For histogram charts with irregular bins, it is usual for the area of the bar, rather than its height, to visually represent the value of each bin. In this way the shape of the underlying curve is maintained over irregular intervals. The `areaPlot` property should be set to `true` to enable this mode.

In the above example:

-   The data from the race is split into irregular age categories.
-   The `areaPlot` property has been set to `true`.

{% warning %}
If you provide the `bins` property, you should refrain from including `binCount`. If both properties are present, `binCount` takes precedence.
{% /warning %}

## 2D Histogram

{% chartExampleRunner title="XY Histogram" name="2d-histogram" type="generated" /%}

To provide Y values as well as X values, specify both `xKey` and `yKey` properties.

```js
series: [
    {
        type: 'histogram',
        xKey: 'age',
        xName: "Participant Age",
        yKey: 'winnings',
        yName: 'Winnings',
    },
],
```

-   `xKey` defines the data values to be distributed into bins along the horizontal axis.
-   `yKey` defines the values determining the height of each bar along the vertical axis. These are [aggregated](#aggregation) within each bin.
-   `xName` and `yName` configure display names, reflected in the [Tooltips](./tooltips/).

### Aggregation

{% chartExampleRunner title="Aggregation" name="aggregation-histogram" type="generated" /%}

The default aggregation method is `sum`. Use the `aggregation` option to change this to `count` or `mean`.

```js
series: [
    {
        type: 'histogram',
        xKey: 'age',
        xName: 'Participant Age',
        yKey: 'winnings',
        yName: 'Winnings',
        aggregation: 'sum' //default
    },
],
```

## API Reference

{% tabs %}

{% tabItem id="AgHistogramSeriesOptions" label="Histogram Series" %}
{% apiReference id="AgHistogramSeriesOptions" /%}
{% /tabItem %}

{% /tabs %}
