---
title: 'Installation'
---

Learn how to add AG Charts to your application.

## Overview

Adding AG Charts to your application is simple and follows standard Node.js conventions for modular Javascript.
{% if isFramework("javascript") %}
For Javascript projects not building bundles we also provide a pre-built UMD bundle for direct use.
{% /if %}

## Adding to Your Bundled Project

This is the recommended approach for modern application development. We expect most users will be using a tool such as
`rollup`, `webpack`, `esbuild`, `vite` or the many other options to bundle their application.

### Install NPM Package

{% tabs omitFromOverview=true %}
{% tabItem id="js-npm" label="NPM" %}

{% if isFramework("javascript") %}

```bash
# Pick one package only, the Enterprise edition depends on Community.

# Install AG Charts Community edition.
npm install ag-charts-community

# Install AG Charts Enterprise edition.
npm install ag-charts-enterprise
```

{% /if %}

{% if isFramework("react") %}

```bash
npm install ag-charts-react

# Install AG Charts Enterprise edition (optional).
npm install ag-charts-enterprise
```

{% /if %}

{% if isFramework("angular") %}

```bash
npm install ag-charts-angular

# Install AG Charts Enterprise edition (optional).
npm install ag-charts-enterprise
```

{% /if %}

{% if isFramework("vue") %}

```bash
npm install ag-charts-vue3

# Install AG Charts Enterprise edition (optional).
npm install ag-charts-enterprise
```

{% /if %}

{% /tabItem %}
{% tabItem id="js-yarn" label="Yarn" %}

{% if isFramework("javascript") %}

```bash
# Pick one package only, the Enterprise edition depends on Community.

# Install AG Charts Community edition.
yarn add ag-charts-community

# Install AG Charts Enterprise edition.
yarn add ag-charts-enterprise
```

{% /if %}
{% if isFramework("react") %}

```bash
yarn add ag-charts-react

# Install AG Charts Enterprise edition (optional).
yarn add ag-charts-enterprise
```

{% /if %}

{% if isFramework("angular") %}

```bash
yarn add ag-charts-angular

# Install AG Charts Enterprise edition (optional).
yarn add ag-charts-enterprise
```

{% /if %}

{% if isFramework("vue") %}

```bash
yarn add ag-charts-vue3

# Install AG Charts Enterprise edition (optional).
yarn add ag-charts-enterprise
```

{% /if %}

{% /tabItem %}
{% /tabs %}

### Use the Charts API

You can then use the [Charts API](./api-create-update) to create and update chart instances:

{% if isFramework("javascript") %}

{% tabs omitFromOverview=true %}
{% tabItem id="community-api-ts" label="Typescript / ES Modules" %}

```javascript
import { AgCharts } from 'ag-charts-community';

AgCharts.create(/* chart options /*);
```

{% /tabItem %}
{% tabItem id="community-api-cjs" label="Common JS" %}

```javascript
const agCharts = require('ag-charts-community');

agCharts.AgCharts.create(/* chart options */);
```

{% /tabItem %}
{% /tabs %}

{% /if %}

{% if isFramework("react") %}

```jsx
import { AgChartsReact } from 'ag-charts-react';

const MyChart = (options) => {
  return <AgChartsReact options={options} />;
};
```

{% /if %}

{% if isFramework("angular") %}

```javascript
import { AgChartsAngularModule } from 'ag-charts-angular';

@Component({
    selector: 'my-app',
    standalone: true,
    imports: [AgChartsAngularModule],
    template: `<ag-charts-angular style="height: 100%" [options]="options"></ag-charts-angular> `,
})
export class MyAppComponent {
    /* ... */
}
```

{% /if %}

{% if isFramework("vue") %}

```javascript
import { AgChartsVue } from 'ag-charts-vue3';

const MyChart = {
    template: `<ag-charts-vue :options="options"></ag-charts-vue>`,
    components: { 'ag-charts-vue': AgChartsVue },
    /* ... */
};
```

{% /if %}

### Enabling Enterprise Features

Enterprise Charts features are enabled by loading the `ag-charts-enterprise` module and setting your license key before
using the [Charts API](./api-create-update).

{% tabs omitFromOverview=true %}
{% tabItem id="enterprise-load-ts" label="Typescript / ES Modules" %}

```javascript
import { AgCharts } from 'ag-charts-enterprise';

AgCharts.setLicenseKey('your license key');
```

{% /tabItem %}
{% tabItem id="enterprise-load-cjs" label="Common JS" %}

```javascript
const agCharts = require('ag-charts-enterprise');

agCharts.AgCharts.setLicenseKey('your license key');
```

{% /tabItem %}
{% /tabs %}

## Without a Bundled Project

{% if isFramework("react") %}
We don't support pre-built bundles for React - see the [Javascript](../javascript/installation) documentation for more information.
{% /if %}

{% if isFramework("angular") %}
We don't support pre-built bundles for Angular - see the [Javascript](../javascript/installation) documentation for more information.
{% /if %}

{% if isFramework("vue") %}
We don't support pre-built bundles for Vue - see the [Javascript](../javascript/installation) documentation for more information.
{% /if %}

{% if isFramework("javascript") %}

We provide a UMD bundle for direct inclusion in an application's HTML by adding a `<script>` element the `<head>` tag:

```html
<head>
    <!-- Pick one tag only, the Enterprise edition bundles Community too. -->
    <!-- AG Charts Community edition. -->
    <script src="https://cdn.jsdelivr.net/npm/ag-charts-community@9.0.0/dist/umd/ag-charts-community.js"></script>

    <!-- AG Charts Enterprise edition. -->
    <script src="https://cdn.jsdelivr.net/npm/ag-charts-enterprise@9.0.0/dist/umd/ag-charts-enterprise.js"></script>
</head>
```

The [Charts API](./api-create-update) is then available via the global `agCharts`:

```html
<script>
    const options = {
        /* ... */
    };
    agCharts.AgCharts.create(options);
</script>
```

### Enabling Enterprise Features

Enterprise Charts features are enabled by loading the `ag-charts-enterprise.js` bundle and setting your license key before
using the [Charts API](./api-create-update).

```html
<script>
    agCharts.AgCharts.setLicenseKey('your license key');
</script>
```

{% /if %}
