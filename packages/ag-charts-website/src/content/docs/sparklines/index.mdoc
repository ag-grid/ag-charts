---
title: 'Sparklines - Overview'
---

A Sparkline condenses data trends into small, inline charts, for embedding in tables or dashboards.

{% chartExampleRunner title="Sparklines" name="sparklines" type="generated" /%}

## Minimal Configuration

To create a Sparkline, use the `createSparkline` API.

{% if isFramework("javascript") %}

```js
const options = {
    type: 'bar',
    container: document.getElementById('myChart'),
    data: [],
    xKey: 'date',
    yKey: 'price',
};

AgCharts.createSparkline(options);
```

{% /if %}

{% if isFramework("react") %}

```jsx
const [options, setOptions] = useState({
    type: 'bar',
    container: document.getElementById('myChart'),
    data: [],
    xKey: 'date',
    yKey: 'price',
});

return (
    <AgSparkline options={options} />
);
```

{% /if %}

{% if isFramework("angular") %}

```js
@Component({
  selector: 'app-root',
  standalone: true,
  imports: [AgSparkline],
  template: `<ag-sparkline [options]="options"></ag-sparkline>`,
})
export class AppComponent {
  public options: AgRadialGaugeOptions;
  constructor() {
    this.options = {
        type: 'bar',
        container: document.getElementById('myChart'),
        data: [],
        xKey: 'date',
        yKey: 'price',
    };
  }
}
```

{% /if %}

{% if isFramework("vue") %}

```js
template: `<ag-sparkline :options="options"/>`,
components: {
    'ag-sparkline': AgSparkline,
},
data() {
    return {
        type: 'bar',
        container: document.getElementById('myChart'),
        data: [],
        xKey: 'date',
        yKey: 'price',
    };
}
```

{% /if %}

In this configuration:

-   `type` is one of:
    -   `'bar'` for a [Bar Series](./bar-series).
    -   `'line'` for a [Line Series](./line-series).
    -   `'area'` for an [Area Series](./area-series).
-   `data` defines the [chart data](./quick-start).
-   `xKey` defines the categories, and is mapped to the [Category Axis](./axes-types/#category).
-   `yKey` provides the numerical values, corresponding to the [Number Axis](./axes-types/#number).

## Customisation

### Series

{% chartExampleRunner title="Customised Sparkline" name="customised-sparkline" type="generated" options={ "exampleHeight": 320 } /%}

```js
{
    type: 'bar',
    fill: '#5C6BC0',
    cornerRadius: 3,
}
```

Each of the Bar, Line, and Area Sparklines can be customised using the associated series options. Unlike the default chart, there is no array of series. Instead, the series options are put at the top level. See the documentation for [Bar Series](./bar-series), [Line Series](./line-series), and [Area Series](./area-series).

### Axes

{% chartExampleRunner title="Sparkline Axes" name="sparkline-axes" type="generated" options={ "exampleHeight": 320 } /%}

```js
{
    xAxis: {
        type: 'time',
        visible: false,
    },
    yAxis: {
        type: 'number',
        min: 125,
        max: 150,
    },
}
```

In this configuration:

-   `type` are corresponds to an axis type as documented in [Axis Types](./axes-types)
-   `visible` hides

{% note %}
When using `direction: 'horizontal'` on the Bar Series, the x- and y- axes are flipped so `xAxis` always corresponds to the categories and `yAxis` always corresponds to the values.
{% /note %}

## API Reference

{% tabs %}

{% tabItem id="AgBarSparklineOptions" label="Bar Sparkline Options" %}
{% apiReference id="AgBarSparklineOptions" /%}
{% /tabItem %}

{% tabItem id="AgLineSparklineOptions" label="Line Sparkline Options" %}
{% apiReference id="AgLineSparklineOptions" /%}
{% /tabItem %}

{% tabItem id="AgAreaSparklineOptions" label="Area Sparkline Options" %}
{% apiReference id="AgAreaSparklineOptions" /%}
{% /tabItem %}

{% /tabs %}
