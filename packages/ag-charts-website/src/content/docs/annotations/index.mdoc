---
title: 'Annotations'
enterprise: true
---

Users can add various annotations to aid with data analysis.

{% chartExampleRunner title="Annotations Initial" name="annotation-initial" type="generated" /%}

## User Annotations

When annotations are enabled, users have the ability to create, edit and delete their own annotations.

### Adding

To create an annotation, click the button in the [Toolbar](./toolbars/) and then click on the chart. Annotations can be created by multiple clicks on the chart, or by clicking and dragging.
Channel annotations are done in two stages, first horizontal and then vertical.

The horizontal and vertical line annotations can also be created by clicking the '+' button next to the axes, when enabled.

### Editing

Clicking on an annotation selects it. It can be moved or adjusted by dragging. The colour can be changed by clicking the 'pencil' icon in the floating toolbar and using the colour picker.
The new colour will be used for any subsequently created annotations.

### Deleting

Clicking the 'delete' button from the floating toolbar will remove the selected annotation, as will pressing the delete key.

There is also a 'clear' button in the annotations toolbar which will remove all annotations.

### Locking

An annotation can be 'locked' from the floating toolbar. This prevents accidental moving or deleting. Please note that the 'clear' button will remove locked annotations.

## Annotation Types

-   **Trend Line**: A single line between two points on the chart.
-   **Parallel Channel**: Two parallel lines, with a fill between them and an optional centre line as well.
-   **Disjoint Channel**: Two lines which do not need to be parallel, with a fill between them.
-   **Horizontal Line**: A horizontal line across the entire chart. There is also an optional label over the axis.
-   **Vertical Line**: A vertical line across the entire chart. There is also an optional label over the axis.

## Save & Restore

It is possible to retrieve the current annotation state by using the `getState()` method. This will return the configuration for all displayed annotations with any user edits.
This can be saved and later restored to the chart with the `setState()` method or via the `initialState` property.

{% chartExampleRunner title="Annotations Saving & Restoring" name="annotation-save-restore" type="generated" /%}

```js
function saveAnnotations() {
    const newState = chart.getState();
    //save to database...
}

function restoreAnnotations() {
    // retrieve state from database...
    chart.setState(state);
}
```

## Initial State

The `initialState` property allows creating a chart with a saved annotation state. Additionally, mutating this option at runtime will update the displayed annotations.
The object provided to this property should be the same as the object returned from the `getState()` method.

```js
initialState: {
    annotations: [
        {
            type: 'line',
            start: {
                x: { __type: 'date', value: '2024-03-21' },
                y: 1234,
            },
            end: {
                x: { __type: 'date', value: '2024-06-21' },
                y: 2345,
            }
        },
    ],
}
```

## Customisation

{% chartExampleRunner title="Annotation Customisation" name="annotation-customisation" type="generated" /%}

To customise the look of annotations, use [Theme Override Options](/themes-api/#reference-AgChartTheme-overrides-common-annotations).

```ts
theme: {
    overrides: {
      common: {
        annotations: {
          line: {
            stroke: "lime",
            strokeWidth: 3,
            lineDash: [3, 4],
          },
          "parallel-channel": {
            stroke: "red",
            strokeWidth: 4,
            background: {
              fill: "red",
            },
            middle: {
              strokeOpacity: 0,
            },
          },
        },
      },
    },
  },
```

## API Reference

{% tabs %}

{% tabItem id="AgAnnotationsOptions" label="Annotations" %}
{% apiReference id="AgAnnotationsOptions" /%}
{% /tabItem %}

{% tabItem id="AgLineAnnotation" label="Line" %}
{% apiReference id="AgLineAnnotation" /%}
{% /tabItem %}

{% tabItem id="AgParallelChannelAnnotation" label="Parallel Channel" %}
{% apiReference id="AgParallelChannelAnnotation" /%}
{% /tabItem %}

{% tabItem id="AgDisjointChannelAnnotation" label="Disjoint Channel" %}
{% apiReference id="AgDisjointChannelAnnotation" /%}
{% /tabItem %}

{% tabItem id="AgHorizontalLineAnnotation" label="Horizontal Line" %}
{% apiReference id="AgHorizontalLineAnnotation" /%}
{% /tabItem %}

{% tabItem id="AgVerticalLineAnnotation" label="Vertical Line" %}
{% apiReference id="AgVerticalLineAnnotation" /%}
{% /tabItem %}

{% /tabs %}
