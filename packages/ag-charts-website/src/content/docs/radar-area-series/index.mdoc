---
title: 'Radar Area Series'
enterprise: true
---

A Radar Area series (which are similar to _[Radar Line](../radar-line-series/) series_) represent a dataset in a form of an area drawn over a radial grid.
It can be very useful when you need to compare some datasets across **multiple categories**.

## Simple Radar Area

To plot a basic Radar Area we need an array of data, where every item will have a single category value (for the angle axis) and a single numeric value (for the radius axis).

A minimal Radar Area series configuration will look like:

```js
series: [
    {
        type: 'radar-line',
        angleKey: 'subject',
        radiusKey: 'grade',
    },
];
```

{% chartExampleRunner title="Basic Radar Area" name="basic-radar-area" type="generated" options="{ \"enterprise\": true }" /%}

## Multiple Series Radar Area

A Radar Area chart can have multiple series:

```js
series: [
    {
        type: 'radar-area',
        angleKey: 'subject',
        radiusKey: `Mike's grades`,
    },
    {
        type: 'radar-area',
        angleKey: 'subject',
        radiusKey: `Tony's grades`,
    },
],
```

{% chartExampleRunner title="Radar Area With Multiple Series" name="radar-area-multiple-series" type="generated" options="{ \"enterprise\": true }" /%}

## Customisation

### Axis Shape

There are two Polar Axis shape types:

-   `polygon` where categories are connected with straight lines (default for Radar series).
-   `circle` where axis grid is drawn using circles (default for Radial Column and Nightingale).

To change the default shape, please use the axis `shape` property (it should be modified for both axes):

```js
axes: [
    {
        type: 'angle-category',
        shape: 'circle',
    },
    {
        type: 'radius-number',
        shape: 'circle',
    },
];
```

{% chartExampleRunner title="Axis Shape" name="axis-shape" type="generated" options="{ \"enterprise\": true }" /%}

### Axis Label Orientation

Use `label.orientation` property to change the orientation of polar axis labels by providing one of the options: `fixed`, `parallel` or `perpendicular`. The next example demonstrates how this property works:

```js
axes: [
    {
        type: 'angle-category',
        label: {
            orientation: 'parallel',
        },
    },
    {
        type: 'radius-number',
    },
],
```

{% chartExampleRunner title="Axis Label Orientation" name="axis-label-orientation" type="generated" options="{ \"enterprise\": true }" /%}

### Radius Axis Position

`positionAngle` can change the position of Radius Axis line and `label.rotation` will change the rotation angle of axis labels:

```js
axes: [
    {
        type: 'angle-category',
    },
    {
        type: 'radius-number',
        positionAngle: 90,
        label: {
            rotation: -90,
        },
    },
],
```

{% chartExampleRunner title="Radius Axis Position" name="radius-axis-position" type="generated" options="{ \"enterprise\": true }" /%}

### Series / Axis Styling

There are many ways to modify a look of polar grid lines and labels:

{% chartExampleRunner title="Series-Axis-Styling" name="series-axis-styling" type="generated" options="{ \"enterprise\": true }" /%}

## API Reference

{% interfaceDocumentation interfaceName="AgRadarAreaSeriesOptions" config="{ \"showSnippets\": false }" /%}

{% interfaceDocumentation interfaceName="AgAngleCategoryAxisOptions" config="{ \"showSnippets\": false }" /%}

{% interfaceDocumentation interfaceName="AgAngleCategoryAxisLabelOptions" config="{ \"showSnippets\": false }" /%}

{% interfaceDocumentation interfaceName="AgRadiusNumberAxisOptions" config="{ \"showSnippets\": false }" /%}
