---
title: 'Error Bars'
enterprise: true
---

Error Bars show the uncertainty of continuous data values. They can be enabled
on Line, Bar and Scatter Series.

## Single Error Bars

{% chartExampleRunner title="Line Series Error Bars" name="single" type="generated" options="{ \"enterprise\": true }" /%}

Error Bars can be enabled on Line and Bar Series using the `errorBars` key.

The required `yLowerKey` and `yUpperKey` defines the keys used to retrieve the
error values from the data.

```js
data: [
    {
        month: 'Jan',
        temperature: 35,
        temperatureLower: 32,
        temperatureUpper: 37,
    },
],
series: [
    {
        xKey: 'month',
        yKey: 'temperature' ,
        errorBar: {
            yLowerKey: 'temperatureLower',
            yUpperKey: 'temperatureUpper',
        },
    },
],
```

## Scatter Series Error Bars

{% chartExampleRunner title="Scatter Series Error Bars" name="double" type="generated" options="{ \"enterprise\": true }" /%}

Error Bars can be enabled on Scatter Series using the `errorBars` key.

The required properties `xLowerKey`, `xUpperKey`, `yLowerKey` and `yUpperKey`
define the keys used to retrieve the X and Y error values from the data.

```js
data: [
    {
        volume: 0.5,
        volumeLower: 0.45,
        volumeUpper: 0.55,
        pressure: 1.2,
        pressureLower: 1.1,
        pressureUpper: 1.4
    },
],
series: [
    {
        type: 'scatter',
        xKey: 'volume',
        yKey: 'pressure',
        errorBar:  {
            xLowerKey: 'volumeLower',
            xUpperKey: 'volumeUpper',
            yLowerKey: 'pressureLower',
            yUpperKey: 'pressureUpper',
        },
    },
],
```

## Tooltip Parameters

{% chartExampleRunner title="Error Bars Tooltips" name="tooltips-error-bars" type="generated" options="{ \"enterprise\": true }" /%}

[Tooltips](./tooltips) are not shown by default, but error bar parameters are
provided the `renderer` for customization.

```js
function verbose_renderer(params) {
    const datum = params.datum;
    return {
        title: `${datum[params.xKey]}m³ / ${datum[params.yKey]}kPa`,
        content:
            '<ul>' +
            `<li>${params.xUpperName}: ${params.xUpperKey ? datum[params.xUpperKey] : undefined}m³</li>` +
            `<li>${params.xLowerName}: ${params.xLowerKey ? datum[params.xLowerKey] : undefined}m³</li>` +
            `<li>${params.yUpperName}: ${params.yUpperKey ? datum[params.yUpperKey] : undefined}kPa</li>` +
            `<li>${params.yLowerName}: ${params.yLowerKey ? datum[params.yLowerKey] : undefined}kPa</li>` +
            '</ul>',
    };
}
```

The `renderer` has access to the keys, names, and values for the error data for
both axes:

-   `xLowerKey`
-   `xLowerValue`
-   `xLowerName`
-   `xUpperKey`
-   `xUpperValue`
-   `xUpperName`
-   `yLowerKey`
-   `yLowerValue`
-   `yLowerName`
-   `yUpperKey`
-   `yUpperValue`
-   `yUpperName`

The optional names will default to keys if unset.
