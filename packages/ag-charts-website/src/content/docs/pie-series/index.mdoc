---
title: 'Pie Series'
---

A Pie Series displays categorical data as proportional slices within a circle.

## Basic Configuration

To plot a basic pie all we need is an array of values that will determine the angle of each pie sector. The total of all values will correspond to the full pie.

A minimal pie series configuration is shown below:

```js
series: [
    {
        type: 'pie',
        angleKey: 'value',
    },
];
```

This results in the chart shown below. Note that [tooltips](./tooltips/) show the absolute value of each pie sector.

{% chartExampleRunner title="Basic Pie Chart" name="basic-pie" type="generated" /%}

## Labels

We support two types of label related to individual sectors:

-   Call-out labels: displayed adjacent to each sector with a joining line (configured via `calloutLabelKey`, `calloutLabel` and `calloutLabelLine` options).
-   Sector labels: displayed inside each sector (configured via `sectorLabelKey` and `sectorLabel` options).

Additionally legend labels and tooltips are derived from the call-out label options.

```diff
series: [{
    type: 'pie',
    angleKey: 'value',

+   calloutLabelKey: 'label',
+   legendItemKey: 'label',
+   sectorLabelKey: 'value',
+   sectorLabel: {
+       color: 'white',
+       fontWeight: 'bold'
+   }
}]
```

This example demonstrates:

-   Use of `legendItemKey`, enabling:
    -   Labels for use in the legend.
-   Use of `calloutLabelKey`, enabling:
    -   Display of a per-sector callout label.
    -   A fallback label for use in the legend if `legendItemKey` is not provided.
    -   Tooltips on segment hover including the callout label and sector value.
-   Use of `sectorLabelKey` and `sectorLabel`, enabling:
    -   Display of a per-sector inside label.
    -   Some sector labels are not displayed, where the sector is too small to fit the label text.
-   Individual sectors can be toggled on and off via the legend.

{% chartExampleRunner title="Pie Chart with Labels" name="pie-labels" type="generated" /%}

The `calloutLabel.formatter` and `sectorLabel.formatter` functions can be used to change the text value displayed in the labels. They receive a single object as a parameter containing values associated with a pie sector. Please see the [API reference](#api-reference) for the full list of available properties.

For example, to display the numeric values for a given pie sector in the callout label,
you can use the following label formatter function:

```js
series: [{
    ...
    calloutLabel: {
        formatter: ({ datum, calloutLabelKey, angleKey }) => {
            return `${datum[calloutLabelKey]}: ${datum[angleKey]}`;
        }
    }
}]
```

Please check the [API reference](#api-reference) below to learn more about `calloutLabel`, `calloutLine` and `sectorLabel`, as well as other series configuration.

## Variable Sector Radius

Let's say we have the data for both the market share of mobile operating systems and the level of user satisfaction with each OS. We could represent the satisfaction level as the radius of a sector using the `radiusKey` config like so:

```js
series: [
    {
        type: 'pie',
        calloutLabelKey: 'os',
        angleKey: 'share',
        radiusKey: 'satisfaction',
    },
];
```

A pie chart where sectors have different radii is also known as a **rose chart**.

{% chartExampleRunner title="Sectors with Different Radii" name="sector-radius" type="generated" /%}

## API Reference

{% interfaceDocumentation interfaceName="AgPieSeriesOptions" config="{ \"showSnippets\": false }" /%}
