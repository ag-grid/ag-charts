---
title: 'Nightingale Series'
enterprise: true
---

A Nightingale Series, also called _Rose_ or _Wind_ Series, represents data as radial segments, with one segment per category
value. It can simplify the comparison of datasets across multiple categories, providing a concise depiction of data trends.

## Simple Nightingale

{% chartExampleRunner title="Simple Nightingale" name="simple-nightingale" type="generated" options="{ \"enterprise\": true }" /%}

To create a Nightingale Series, use the `nightingale` series type.

```js
series: [
    { type: 'nightingale', angleKey: 'quarter', radiusKey: 'air', radiusName: 'Mountain air' },
    { type: 'nightingale', angleKey: 'quarter', radiusKey: 'winds', radiusName: 'Polar winds' },
    { type: 'nightingale', angleKey: 'quarter', radiusKey: 'holes', radiusName: 'Donut holes' },
],
```

In this configuration:

-   `angleKey` is set to 'quarter', which is the shared category for the Angle Axis.
-   `radiusKey` specifies the numerical datasets, 'air', 'winds' and 'holes', for the Radius Axis.
-   `radiusName` labels each series, such as 'Mountain air', 'Polar winds' and 'Donut holes'.

## Grouped Nightingale

Grouping sectors is used when you want to compare multiple data series side by side within the same category.

{% chartExampleRunner title="Grouped Nightingale Chart" name="group-nightingale" type="generated" options="{ \"enterprise\": true }" /%}

To group sectors in a Nightingale Series, enable the `grouped` series property.

```js
series: [
    { type: 'nightingale', angleKey: 'quarter', radiusKey: 'air', grouped: true },
    { type: 'nightingale', angleKey: 'quarter', radiusKey: 'winds', grouped: true },
    { type: 'nightingale', angleKey: 'quarter', radiusKey: 'holes', grouped: true },
],
```

## Customisation

### Inner Radius

The inner radius can be used to create a 'doughnut' effect which can help emphasise specific data points.

{% chartExampleRunner title="Inner Radius" name="inner-radius" type="generated" options="{ \"enterprise\": true }" /%}

To create this 'doughnut' effect, use the `innerRadiusRatio` option on the Radius Number Axis.

```js
axes: [
    { type: 'angle-category' },
    { type: 'radius-number', innerRadiusRatio: 0.2 },
],
```

Any value between `0` and `1` will set the inner radius as a proportion of the overall radius.

### Category Padding

{% chartExampleRunner title="Category Padding" name="category-padding" type="generated" options="{ \"enterprise\": true }" /%}

The following options are used to control the padding between different elements on the Angle Axis:

-   `paddingInner`: Gap between column groups, ranges from `0` (no gap) to `1` (maximum spacing).
-   `groupPaddingInner`: Spacing within a group, ranges from `0` (columns touching) to `1` (widest gap).

```js
axes: [
    { type: 'angle-category', groupPaddingInner: 0.25, paddingInner: 0.25 },
    { type: 'radius-number' },
],
```

### Axis Label Orientation

{% chartExampleRunner title="Axis Label Orientation" name="axis-label-orientation" type="generated" options="{ \"enterprise\": true }" /%}

To change Angle Axis Label orientation, use the `label.orientation` property with these options:

-   `fixed`: Labels have fixed orientation (default).
-   `parallel`: Labels align parallel to the axis.
-   `perpendicular`: Labels align perpendicular to the axis.

The following configuration changes the orientation of the Axis Labels to `parallel` :

```js
axes: [
    {
        type: 'angle-category',
        label: {
            orientation: 'parallel',
        },
    },
    { type: 'radius-number' },
],
```

### Radius Axis Position

{% chartExampleRunner title="Radius Axis Position" name="radius-axis-position" type="generated" options="{ \"enterprise\": true }" /%}

Customise the Radius Axis Line position via `positionAngle` and Axis Label rotation using `label.rotation`:

```js
axes: [
    { type: 'angle-category' },
    {
        type: 'radius-number',
        positionAngle: 68,
        label: {
            rotation: -68,
        },
    },
],
```

## API Reference

{% interfaceDocumentation interfaceName="AgNightingaleSeriesOptions" config="{ \"showSnippets\": false }" /%}

{% interfaceDocumentation interfaceName="AgAngleCategoryAxisOptions" config="{ \"showSnippets\": false }" /%}

{% interfaceDocumentation interfaceName="AgAngleCategoryAxisLabelOptions" config="{ \"showSnippets\": false }" /%}

{% interfaceDocumentation interfaceName="AgRadiusNumberAxisOptions" config="{ \"showSnippets\": false }" /%}
