---
title: 'Stylers'
---

Stylers allow customisation of the visual appearance of specific items <!-- or series -->based on the data or other conditions.

## Item Stylers

An `itemStyler` is a callback function that is called once for each item within the series. These can be found:

-   In the `series` object, for customising primitive properties on the series level.
-   Inside nested series property objects, such as `marker` <!-- or label -->.

Each `itemStyler` receives a `params` object containing the `datum` of the item, as well as the current styles applied to it.
It should return an object containing the styles to be applied to the item.
The exact details differ between the different series types and components which implement the `itemStyler` function.

// EXAMPLE - line an bar. Bar is highlighted, marker has shape changed. //
//Snippet , bullets //.

Please use the [API reference](/options) to learn more about Stylers, the inputs they receive and the attributes that can be customised.

<!--
## Series Stylers

An `styler` is a callback function that is called once for each series.
These can be found in the `series` object, and are used to change the appearance of the entire series based on a condition.

The Series Styler is most often used within a [Theme](./themes/).

Each `styler` receives a `params` object containing information about the series, as well as the top level styles applied to it.
It should return an object containing the styles to be applied to the series.

Any styling of nested property objects must be done with an `itemStyler`.
 -->
<!--
## Marker Formatter

Applies to _series with markers_, such as `line`, `scatter` and `area`, where each data point is represented by a marker that can be of any shape.

If we take a stacked area series where we want the markers of the second sub-series to be larger than default size, we could use the following formatter function:

```js
function formatter({ yKey, size }) {
    return { size: yKey === 'electric' ? 12 : size };
}

series: [
    {
        type: 'area',
        xKey: 'quarter',
        yKey: 'petrol',
        stacked: true,
        marker: { formatter },
    },
    {
        type: 'area',
        xKey: 'quarter',
        yKey: 'electric',
        stacked: true,
        marker: { formatter },
    },
],
```

{% chartExampleRunner title="Marker Formatter" name="marker-formatter" type="generated" /%}

## Series Item Formatter

Applies to _series without markers_, such as `bar` and `pie`, where each data point is represented by a series item with a fixed shape, for example a rectangle or a pie sector.

If we have a list of values by country presented via bar series and want the bar for a particular country to stand out, we could use the following formatter function:

```js
function formatter(params) {
    return {
        fill: params.datum[params.xKey] === 'UK' ? (params.highlighted ? 'lime' : 'red') : params.fill,
    };
}

series: [
    {
        type: 'bar',
        xKey: 'country',
        yKey: 'gdp',
        formatter,
    },
];
```

{% chartExampleRunner title="Series Formatter" name="series-formatter" type="generated" /%} -->
