import type { SeriesModule } from '../../module/coreModules';
import type { SeriesPaletteFactory } from '../../module/coreModulesTypes';
import type { ModuleContext } from '../../module/moduleContext';
import type { AgCartesianSeriesOptions, AgChartOptions, AgHierarchySeriesOptions, AgPolarSeriesOptions } from '../../options/agChartOptions';
import type { SeriesType } from '../mapping/types';
import type { ISeries } from '../series/seriesTypes';
export type SeriesOptions = AgCartesianSeriesOptions | AgPolarSeriesOptions | AgHierarchySeriesOptions;
export declare function registerSeries({ identifier: seriesType, chartTypes: [chartType], instanceConstructor, seriesDefaults, themeTemplate, enterpriseThemeTemplate, paletteFactory, solo, stackable, groupable, stackedByDefault, swapDefaultAxesCondition, }: SeriesModule<any>): void;
export declare function registerSeriesThemeTemplate(seriesType: NonNullable<SeriesType>, themeTemplate: {}, enterpriseThemeTemplate?: {}): void;
export declare function createSeries(seriesType: string, moduleCtx: ModuleContext): ISeries<any>;
export declare function getSeriesDefaults<T extends AgChartOptions>(chartType: string): T;
export declare function getSeriesThemeTemplate(chartType: string): {};
export declare function addSeriesPaletteFactory(seriesType: string, factory: SeriesPaletteFactory): void;
export declare function getSeriesPaletteFactory(seriesType: string): SeriesPaletteFactory<"area" | "line" | "bar" | "scatter" | "box-plot" | "bubble" | "bullet" | "heatmap" | "histogram" | "range-area" | "range-bar" | "waterfall" | "sunburst" | "treemap" | "donut" | "radial-column" | "nightingale" | "pie" | "radar-line" | "radar-area" | "radial-bar">;
export declare function isSoloSeries(seriesType: SeriesType): boolean;
export declare function isStackableSeries(seriesType: SeriesType): boolean;
export declare function isGroupableSeries(seriesType: SeriesType): boolean;
export declare function isSeriesStackedByDefault(seriesType: SeriesType): boolean;
export declare function addGroupableSeriesType(seriesType: SeriesType): void;
export declare function addSoloSeriesType(seriesType: SeriesType): void;
export declare function addStackableSeriesType(seriesType: SeriesType): void;
export declare function addStackedByDefaultSeriesType(seriesType: SeriesType): void;
export declare function addSwapDefaultAxesCondition(seriesType: string, predicate: (opts: any) => boolean): void;
export declare function isDefaultAxisSwapNeeded(opts: AgChartOptions): boolean | undefined;
