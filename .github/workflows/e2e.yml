name: e2e

on:
    push:
        branches: [latest]
env:
    NX_REJECT_UNKNOWN_LOCAL_CACHE: 0
    NX_NO_CLOUD: true
    NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
    NX_BRANCH: ${{ github.ref }}
    # Set to --batch to enable batch execution.
    NX_BATCH_FLAG: '--batch'

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: ${{ github.ref != 'refs/heads/latest' }}

jobs:
    e2e:
        runs-on: ubuntu-latest
        name: e2e tests
        env:
            NX_PARALLEL: 1
        steps:
            - name: Checkout
              id: checkout
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0
            - name: Cache node_modules
              id: cache
              uses: actions/cache@v3
              with:
                  path: |
                      node_modules/
                      packages/*/node_modules/
                      plugins/*/node_modules/
                      libraries/*/node_modules/
                  key: node_modules-${{hashFiles('yarn.lock','patches/*.patch', 'packages/*/package.json', 'plugins/*/package.json')}}
                  restore-keys: node_modules- # Take any latest cache if failed to find it for current yarn.lock
            - name: Cache Nx
              uses: actions/cache@v3
              with:
                  path: .nx/cache
                  key: cache-nx-v17-${{ hashFiles('yarn.lock','patches/*.patch', 'packages/*/package.json', 'plugins/*/package.json') }}-${{ github.sha }}
                  restore-keys: cache-nx-v17-${{ hashFiles('yarn.lock','patches/*.patch', 'packages/*/package.json', 'plugins/*/package.json') }}-
            - name: Setup Node.js
              id: setup_node
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: ${{ github.event.inputs.clean_checkout != 'true' && steps.cache.outputs.cache-hit != 'true' && 'yarn' || '' }}
            - name: yarn install
              if: steps.cache.outputs.cache-hit != 'true'
              id: yarn_install
              run: (yarn check --integrity && yarn postinstall) || yarn install --ci
            - name: yarn postinstall
              if: steps.cache.outputs.cache-hit == 'true'
              run: yarn postinstall
            - name: playwright install
              run: npx playwright install chromium --with-deps

            - name: nx run generate-gallery-thumbnail
              run: yarn nx run generate-gallery-thumbnail --example simple-bar

            - name: nx test:e2e
              run: |
                  yarn nx run --output-style=streamed ag-charts-website:test:e2e --configuration=ci --shard=1/100
              timeout-minutes: 20

            - name: Perist test results
              if: always()
              uses: actions/upload-artifact@v4
              with:
                  name: test-results-e2e
                  path: |
                      reports/
