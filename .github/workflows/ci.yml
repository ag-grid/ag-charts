name: CI

on:
    push:
        branches: [latest]
    pull_request:
        branches: [latest]

concurrency:
    group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
    cancel-in-progress: true

jobs:
    execute_blt:
        runs-on: ubuntu-latest
        steps:
            - id: checkout
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0
            - id: nx_affected_setup
              uses: nrwl/nx-set-shas@v3
              with:
                  main-branch-name: 'latest'
            - id: setup_node
              uses: actions/setup-node@v3
              with:
                  node-version: '18'
                  cache: 'yarn'
            - id: yarn_install
              run: yarn install --ci
            - id: format
              if: always()
              run: yarn nx format:check
            - id: lint
              if: always()
              run: yarn nx affected -t lint --parallel=3
            - id: build
              if: always()
              run: yarn nx affected -t build --parallel=3
            - id: test
              if: steps.build.outcome == 'success'
              run: yarn nx affected -t test --configuration=ci
            - id: results
              if: always()
              run: |
                  echo ${{ steps.format.outcome }} > format.status
                  echo ${{ steps.lint.outcome }} > lint.status
                  echo ${{ steps.build.outcome }} > build.status
                  echo ${{ steps.test.outcome }} > test.status
            - uses: actions/upload-artifact@v3
              if: always()
              with:
                  name: statuses
                  path: |
                      *.status
            - name: Test Report
              uses: dorny/test-reporter@v1
              if: steps.test.outcome == 'success' || steps.test.outcome == 'failure'
              continue-on-error: true
              with:
                  name: Tests Results
                  path: reports/*.xml
                  reporter: jest-junit
            - name: Tag Latest Successful Commit
              if: success() && github.ref == 'refs/heads/latest'
              uses: EndBug/latest-tag@latest
              with:
                  ref: latest-success
                  description: Latest commit to pass GitHub Actions workflow on latest branch.
            - name: Check last job status
              id: lastJobStatus
              if: always() && github.ref == 'refs/heads/latest'
              run: |
                  LAST_JOB_STATUS=$(gh run list --workflow .github/workflows/ci.yml -b latest | grep -oh "completed.*" | grep -v "cancelled" | head -1 | awk '{print $2}')
                  THIS_JOB_STATUS="${{ job.status }}"
                  if [ "$LAST_JOB_STATUS" != "$THIS_JOB_STATUS" ]; then
                    echo "status changed from $LAST_JOB_STATUS to $THIS_JOB_STATUS"
                    echo "::set-output name=changedState::true"
                  else
                    echo "status is still $THIS_JOB_STATUS"
                    echo "::set-output name=changedState::false"
                  fi
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            - name: Slack Notification
              uses: rtCamp/action-slack-notify@v2
              if: always() && job.status != 'cancelled' && github.ref == 'refs/heads/latest' && steps.lastJobStatus.outputs.changedState == 'true'
              env:
                  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
                  SLACK_COLOR: ${{ job.status }}
                  SLACK_ICON: https://avatars.slack-edge.com/2020-11-25/1527503386626_319578f21381f9641cd8_192.png
                  SLACK_USERNAME: GitHub Actions CI
                  SLACK_MESSAGE: |
                      Build: ${{ steps.build.outcome }}
                      Lint: ${{ steps.lint.outcome }}
                      Format: ${{ steps.format.outcome }}
                      Test: ${{ steps.test.outcome }}

    format:
        runs-on: ubuntu-latest
        needs: execute_blt
        steps:
            - uses: actions/download-artifact@v3
            - run: if [[ $(cat statuses/format.status) != 'success' ]] ; then exit 1 ; fi

    lint:
        runs-on: ubuntu-latest
        needs: execute_blt
        steps:
            - uses: actions/download-artifact@v3
            - run: if [[ $(cat statuses/lint.status) != 'success' ]] ; then exit 1 ; fi

    build:
        runs-on: ubuntu-latest
        needs: execute_blt
        steps:
            - uses: actions/download-artifact@v3
            - run: if [[ $(cat statuses/build.status) != 'success' ]] ; then exit 1 ; fi

    test:
        runs-on: ubuntu-latest
        needs: execute_blt
        steps:
            - uses: actions/download-artifact@v3
            - run: if [[ $(cat statuses/test.status) != 'success' ]] ; then exit 1 ; fi
